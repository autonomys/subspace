
//! Autogenerated weights for `pallet_auto_id`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 46.2.0
//! DATE: 2025-09-30, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `protocol-team-testing`, CPU: `AMD Ryzen 5 3600 6-Core Processor`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: 1024

// Executed Command:
// ./target/production/subspace-node
// domain
// benchmark
// pallet
// --runtime=./target/production/wbuild/auto-id-domain-runtime/auto_id_domain_runtime.compact.compressed.wasm
// --extrinsic=*
// --wasm-execution=compiled
// --genesis-builder=none
// --heap-pages=4096
// --steps=50
// --repeat=20
// --pallet=pallet_auto_id
// --output=./domains/runtime/auto-id/src/weights/pallet_auto_id.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_auto_id`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_auto_id::WeightInfo for WeightInfo<T> {
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `AutoId::AutoIds` (r:1 w:1)
	/// Proof: `AutoId::AutoIds` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::EventSegments` (r:0 w:1)
	/// Proof: `System::EventSegments` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn register_issuer_auto_id() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `36`
		//  Estimated: `3501`
		// Minimum execution time: 40_619_000 picoseconds.
		Weight::from_parts(40_950_000, 0)
			.saturating_add(Weight::from_parts(0, 3501))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `AutoId::AutoIds` (r:2 w:2)
	/// Proof: `AutoId::AutoIds` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `AutoId::CertificateRevocationList` (r:1 w:0)
	/// Proof: `AutoId::CertificateRevocationList` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::EventSegments` (r:0 w:1)
	/// Proof: `System::EventSegments` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn register_leaf_auto_id() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1284`
		//  Estimated: `7224`
		// Minimum execution time: 49_609_000 picoseconds.
		Weight::from_parts(50_039_000, 0)
			.saturating_add(Weight::from_parts(0, 7224))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `AutoId::AutoIds` (r:1 w:1)
	/// Proof: `AutoId::AutoIds` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `AutoId::CertificateRevocationList` (r:1 w:1)
	/// Proof: `AutoId::CertificateRevocationList` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::EventSegments` (r:0 w:1)
	/// Proof: `System::EventSegments` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn revoke_issuer_auto_id() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1248`
		//  Estimated: `4713`
		// Minimum execution time: 38_689_000 picoseconds.
		Weight::from_parts(39_109_000, 0)
			.saturating_add(Weight::from_parts(0, 4713))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `AutoId::AutoIds` (r:2 w:1)
	/// Proof: `AutoId::AutoIds` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `AutoId::CertificateRevocationList` (r:1 w:1)
	/// Proof: `AutoId::CertificateRevocationList` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::EventSegments` (r:0 w:1)
	/// Proof: `System::EventSegments` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn revoke_leaf_auto_id() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2559`
		//  Estimated: `8499`
		// Minimum execution time: 43_949_000 picoseconds.
		Weight::from_parts(44_379_000, 0)
			.saturating_add(Weight::from_parts(0, 8499))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `AutoId::AutoIds` (r:1 w:1)
	/// Proof: `AutoId::AutoIds` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::EventSegments` (r:0 w:1)
	/// Proof: `System::EventSegments` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn deactivate_auto_id() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1248`
		//  Estimated: `4713`
		// Minimum execution time: 33_230_000 picoseconds.
		Weight::from_parts(33_429_000, 0)
			.saturating_add(Weight::from_parts(0, 4713))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `AutoId::AutoIds` (r:1 w:1)
	/// Proof: `AutoId::AutoIds` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `AutoId::CertificateRevocationList` (r:1 w:1)
	/// Proof: `AutoId::CertificateRevocationList` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::EventSegments` (r:0 w:1)
	/// Proof: `System::EventSegments` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn renew_issuer_auto_id() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1284`
		//  Estimated: `4749`
		// Minimum execution time: 46_899_000 picoseconds.
		Weight::from_parts(47_469_000, 0)
			.saturating_add(Weight::from_parts(0, 4749))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `AutoId::AutoIds` (r:2 w:2)
	/// Proof: `AutoId::AutoIds` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `AutoId::CertificateRevocationList` (r:1 w:1)
	/// Proof: `AutoId::CertificateRevocationList` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::EventSegments` (r:0 w:1)
	/// Proof: `System::EventSegments` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn renew_leaf_auto_id() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2595`
		//  Estimated: `8535`
		// Minimum execution time: 56_459_000 picoseconds.
		Weight::from_parts(57_128_000, 0)
			.saturating_add(Weight::from_parts(0, 8535))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(4))
	}
}
