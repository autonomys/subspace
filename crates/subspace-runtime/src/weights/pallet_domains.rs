
//! Autogenerated weights for `pallet_domains`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 46.2.0
//! DATE: 2025-10-15, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `protocol-team-testing`, CPU: `AMD Ryzen 5 3600 6-Core Processor`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: 1024

// Executed Command:
// ./target/production/subspace-node
// benchmark
// pallet
// --runtime=./target/production/wbuild/subspace-runtime/subspace_runtime.compact.compressed.wasm
// --extrinsic=*
// --wasm-execution=compiled
// --genesis-builder=none
// --heap-pages=4096
// --steps=50
// --repeat=20
// --pallet=pallet_domains
// --output=./crates/subspace-runtime/src/weights/pallet_domains.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_domains`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_domains::WeightInfo for WeightInfo<T> {
	/// Storage: `Domains::OperatorBundleCountInEpoch` (r:1 w:1)
	/// Proof: `Domains::OperatorBundleCountInEpoch` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::HeadReceiptNumber` (r:1 w:1)
	/// Proof: `Domains::HeadReceiptNumber` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::NewAddedHeadReceipt` (r:1 w:1)
	/// Proof: `Domains::NewAddedHeadReceipt` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestConfirmedDomainExecutionReceipt` (r:1 w:1)
	/// Proof: `Domains::LatestConfirmedDomainExecutionReceipt` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::ExecutionInbox` (r:4 w:1)
	/// Proof: `Domains::ExecutionInbox` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::PendingSlashes` (r:1 w:0)
	/// Proof: `Domains::PendingSlashes` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::InvalidBundleAuthors` (r:1 w:1)
	/// Proof: `Domains::InvalidBundleAuthors` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainStakingSummary` (r:1 w:1)
	/// Proof: `Domains::DomainStakingSummary` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::BlockTree` (r:2 w:2)
	/// Proof: `Domains::BlockTree` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `RuntimeConfigs::DomainBlockPruningDepth` (r:1 w:0)
	/// Proof: `RuntimeConfigs::DomainBlockPruningDepth` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Domains::BlockTreeNodes` (r:1 w:2)
	/// Proof: `Domains::BlockTreeNodes` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestSubmittedER` (r:1 w:0)
	/// Proof: `Domains::LatestSubmittedER` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Transporter::DomainBalances` (r:1 w:1)
	/// Proof: `Transporter::DomainBalances` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainRegistry` (r:1 w:0)
	/// Proof: `Domains::DomainRegistry` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainRuntimeUpgradeRecords` (r:1 w:0)
	/// Proof: `Domains::DomainRuntimeUpgradeRecords` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::SuccessfulBundles` (r:1 w:1)
	/// Proof: `Domains::SuccessfulBundles` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::HeadDomainNumber` (r:1 w:1)
	/// Proof: `Domains::HeadDomainNumber` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::OperatorBundleSlot` (r:1 w:1)
	/// Proof: `Domains::OperatorBundleSlot` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::InboxedBundleAuthor` (r:0 w:1)
	/// Proof: `Domains::InboxedBundleAuthor` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::ConsensusBlockHash` (r:0 w:1)
	/// Proof: `Domains::ConsensusBlockHash` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn submit_bundle() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1931`
		//  Estimated: `12821`
		// Minimum execution time: 143_267_000 picoseconds.
		Weight::from_parts(146_787_000, 0)
			.saturating_add(Weight::from_parts(0, 12821))
			.saturating_add(T::DbWeight::get().reads(22))
			.saturating_add(T::DbWeight::get().writes(17))
	}
	/// Storage: `Domains::HeadReceiptNumber` (r:1 w:1)
	/// Proof: `Domains::HeadReceiptNumber` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::BlockTreeNodes` (r:1 w:0)
	/// Proof: `Domains::BlockTreeNodes` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn submit_fraud_proof() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1092`
		//  Estimated: `4557`
		// Minimum execution time: 28_839_000 picoseconds.
		Weight::from_parts(31_030_000, 0)
			.saturating_add(Weight::from_parts(0, 4557))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Domains::BlockTree` (r:1 w:1)
	/// Proof: `Domains::BlockTree` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::BlockTreeNodes` (r:1 w:1)
	/// Proof: `Domains::BlockTreeNodes` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestSubmittedER` (r:100 w:0)
	/// Proof: `Domains::LatestSubmittedER` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::Operators` (r:100 w:100)
	/// Proof: `Domains::Operators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::PendingSlashes` (r:1 w:1)
	/// Proof: `Domains::PendingSlashes` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainStakingSummary` (r:1 w:1)
	/// Proof: `Domains::DomainStakingSummary` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[1, 100]`.
	fn handle_bad_receipt(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1001 + n * (192 ±0)`
		//  Estimated: `4466 + n * (2667 ±0)`
		// Minimum execution time: 48_829_000 picoseconds.
		Weight::from_parts(50_859_000, 0)
			.saturating_add(Weight::from_parts(0, 4466))
			// Standard Error: 36_224
			.saturating_add(Weight::from_parts(14_965_948, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().reads((2_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes(4))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(n.into())))
			.saturating_add(Weight::from_parts(0, 2667).saturating_mul(n.into()))
	}
	/// Storage: `Domains::Operators` (r:200 w:100)
	/// Proof: `Domains::Operators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:100 w:100)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Domains::DomainStakingSummary` (r:1 w:1)
	/// Proof: `Domains::DomainStakingSummary` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::PendingSlashes` (r:1 w:1)
	/// Proof: `Domains::PendingSlashes` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::AccumulatedTreasuryFunds` (r:1 w:1)
	/// Proof: `Domains::AccumulatedTreasuryFunds` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[1, 100]`.
	/// The range of component `s` is `[0, 100]`.
	fn confirm_domain_block(n: u32, s: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0 + n * (364 ±0) + s * (223 ±0)`
		//  Estimated: `270426 + n * (2588 ±0) + s * (976 ±0)`
		// Minimum execution time: 1_493_428_000 picoseconds.
		Weight::from_parts(1_501_198_000, 0)
			.saturating_add(Weight::from_parts(0, 270426))
			// Standard Error: 263_059
			.saturating_add(Weight::from_parts(12_406_325, 0).saturating_mul(n.into()))
			// Standard Error: 263_301
			.saturating_add(Weight::from_parts(9_421_703, 0).saturating_mul(s.into()))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().reads((2_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(s.into())))
			.saturating_add(T::DbWeight::get().writes(3))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(s.into())))
			.saturating_add(Weight::from_parts(0, 2588).saturating_mul(n.into()))
			.saturating_add(Weight::from_parts(0, 976).saturating_mul(s.into()))
	}
	/// Storage: `Domains::DomainStakingSummary` (r:1 w:1)
	/// Proof: `Domains::DomainStakingSummary` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainChainRewards` (r:1 w:0)
	/// Proof: `Domains::DomainChainRewards` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::Operators` (r:100 w:100)
	/// Proof: `Domains::Operators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestSubmittedER` (r:100 w:0)
	/// Proof: `Domains::LatestSubmittedER` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[1, 100]`.
	fn operator_reward_tax_and_restake(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `464 + n * (208 ±0)`
		//  Estimated: `3929 + n * (2683 ±0)`
		// Minimum execution time: 28_310_000 picoseconds.
		Weight::from_parts(36_693_887, 0)
			.saturating_add(Weight::from_parts(0, 3929))
			// Standard Error: 13_243
			.saturating_add(Weight::from_parts(5_041_426, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().reads((2_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes(1))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(n.into())))
			.saturating_add(Weight::from_parts(0, 2683).saturating_mul(n.into()))
	}
	/// Storage: `Domains::PendingSlashes` (r:1 w:1)
	/// Proof: `Domains::PendingSlashes` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainStakingSummary` (r:1 w:0)
	/// Proof: `Domains::DomainStakingSummary` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::Operators` (r:1 w:1)
	/// Proof: `Domains::Operators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::Deposits` (r:11 w:10)
	/// Proof: `Domains::Deposits` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DepositOnHold` (r:10 w:10)
	/// Proof: `Domains::DepositOnHold` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::OperatorEpochSharePrice` (r:2 w:2)
	/// Proof: `Domains::OperatorEpochSharePrice` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::Withdrawals` (r:11 w:0)
	/// Proof: `Domains::Withdrawals` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:10 w:10)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:12 w:12)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Domains::OperatorHighestSlot` (r:0 w:1)
	/// Proof: `Domains::OperatorHighestSlot` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::OperatorIdOwner` (r:0 w:1)
	/// Proof: `Domains::OperatorIdOwner` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[0, 9]`.
	fn slash_operator(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1352 + n * (341 ±0)`
		//  Estimated: `8799 + n * (2816 ±0)`
		// Minimum execution time: 167_876_000 picoseconds.
		Weight::from_parts(182_260_408, 0)
			.saturating_add(Weight::from_parts(0, 8799))
			// Standard Error: 86_235
			.saturating_add(Weight::from_parts(62_612_061, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(14))
			.saturating_add(T::DbWeight::get().reads((5_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes(12))
			.saturating_add(T::DbWeight::get().writes((4_u64).saturating_mul(n.into())))
			.saturating_add(Weight::from_parts(0, 2816).saturating_mul(n.into()))
	}
	/// Storage: `Domains::DomainStakingSummary` (r:1 w:1)
	/// Proof: `Domains::DomainStakingSummary` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Subspace::BlockSlots` (r:1 w:0)
	/// Proof: `Subspace::BlockSlots` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::EpochStartSlot` (r:1 w:1)
	/// Proof: `Domains::EpochStartSlot` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::OperatorBundleCountInEpoch` (r:1 w:0)
	/// Proof: `Domains::OperatorBundleCountInEpoch` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainRegistry` (r:1 w:0)
	/// Proof: `Domains::DomainRegistry` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestSubmittedER` (r:512 w:0)
	/// Proof: `Domains::LatestSubmittedER` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::Operators` (r:512 w:512)
	/// Proof: `Domains::Operators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::InvalidBundleAuthors` (r:1 w:0)
	/// Proof: `Domains::InvalidBundleAuthors` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DeregisteredOperators` (r:1 w:0)
	/// Proof: `Domains::DeregisteredOperators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DeactivatedOperators` (r:1 w:0)
	/// Proof: `Domains::DeactivatedOperators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LastEpochStakingDistribution` (r:0 w:1)
	/// Proof: `Domains::LastEpochStakingDistribution` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::OperatorEpochSharePrice` (r:0 w:512)
	/// Proof: `Domains::OperatorEpochSharePrice` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `p` is `[0, 512]`.
	fn finalize_domain_epoch_staking(p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `108279`
		//  Estimated: `1376469`
		// Minimum execution time: 3_292_159_000 picoseconds.
		Weight::from_parts(3_429_844_051, 0)
			.saturating_add(Weight::from_parts(0, 1376469))
			// Standard Error: 6_943
			.saturating_add(Weight::from_parts(2_494_754, 0).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(1032))
			.saturating_add(T::DbWeight::get().writes(3))
			.saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(p.into())))
	}
	/// Storage: `Domains::NextRuntimeId` (r:1 w:1)
	/// Proof: `Domains::NextRuntimeId` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::RuntimeRegistry` (r:0 w:1)
	/// Proof: `Domains::RuntimeRegistry` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn register_domain_runtime() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `1485`
		// Minimum execution time: 21_076_570_000 picoseconds.
		Weight::from_parts(21_305_945_000, 0)
			.saturating_add(Weight::from_parts(0, 1485))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `Domains::RuntimeRegistry` (r:1 w:0)
	/// Proof: `Domains::RuntimeRegistry` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::ScheduledRuntimeUpgrades` (r:1 w:1)
	/// Proof: `Domains::ScheduledRuntimeUpgrades` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn upgrade_domain_runtime() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2481066`
		//  Estimated: `2484531`
		// Minimum execution time: 22_573_128_000 picoseconds.
		Weight::from_parts(22_732_705_000, 0)
			.saturating_add(Weight::from_parts(0, 2484531))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Domains::PermissionedActionAllowedBy` (r:1 w:0)
	/// Proof: `Domains::PermissionedActionAllowedBy` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::RuntimeRegistry` (r:1 w:1)
	/// Proof: `Domains::RuntimeRegistry` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Domains::NextDomainId` (r:1 w:1)
	/// Proof: `Domains::NextDomainId` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::EvmChainIds` (r:1 w:1)
	/// Proof: `Domains::EvmChainIds` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Transporter::DomainBalances` (r:1 w:1)
	/// Proof: `Transporter::DomainBalances` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `Domains::DomainSudoCalls` (r:0 w:1)
	/// Proof: `Domains::DomainSudoCalls` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainRegistry` (r:0 w:1)
	/// Proof: `Domains::DomainRegistry` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::BlockTreeNodes` (r:0 w:1)
	/// Proof: `Domains::BlockTreeNodes` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainStakingSummary` (r:0 w:1)
	/// Proof: `Domains::DomainStakingSummary` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestConfirmedDomainExecutionReceipt` (r:0 w:1)
	/// Proof: `Domains::LatestConfirmedDomainExecutionReceipt` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainGenesisBlockExecutionReceipt` (r:0 w:1)
	/// Proof: `Domains::DomainGenesisBlockExecutionReceipt` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::BlockTree` (r:0 w:1)
	/// Proof: `Domains::BlockTree` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Messenger::DomainChainAllowlistUpdate` (r:0 w:1)
	/// Proof: `Messenger::DomainChainAllowlistUpdate` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn instantiate_domain() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2481138`
		//  Estimated: `2484603`
		// Minimum execution time: 6_094_250_000 picoseconds.
		Weight::from_parts(6_150_728_000, 0)
			.saturating_add(Weight::from_parts(0, 2484603))
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().writes(14))
	}
	/// Storage: `Domains::PendingStakingOperationCount` (r:1 w:1)
	/// Proof: `Domains::PendingStakingOperationCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainStakingSummary` (r:1 w:1)
	/// Proof: `Domains::DomainStakingSummary` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainRegistry` (r:1 w:0)
	/// Proof: `Domains::DomainRegistry` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::NextOperatorId` (r:1 w:1)
	/// Proof: `Domains::NextOperatorId` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Domains::DepositOnHold` (r:1 w:1)
	/// Proof: `Domains::DepositOnHold` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `Domains::Deposits` (r:1 w:1)
	/// Proof: `Domains::Deposits` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainChainRewards` (r:1 w:0)
	/// Proof: `Domains::DomainChainRewards` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Subspace::BlockSlots` (r:1 w:0)
	/// Proof: `Subspace::BlockSlots` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::EpochStartSlot` (r:1 w:1)
	/// Proof: `Domains::EpochStartSlot` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::OperatorBundleCountInEpoch` (r:1 w:0)
	/// Proof: `Domains::OperatorBundleCountInEpoch` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestSubmittedER` (r:1 w:0)
	/// Proof: `Domains::LatestSubmittedER` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::InvalidBundleAuthors` (r:1 w:0)
	/// Proof: `Domains::InvalidBundleAuthors` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DeregisteredOperators` (r:1 w:0)
	/// Proof: `Domains::DeregisteredOperators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DeactivatedOperators` (r:1 w:0)
	/// Proof: `Domains::DeactivatedOperators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::Operators` (r:0 w:1)
	/// Proof: `Domains::Operators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LastEpochStakingDistribution` (r:0 w:1)
	/// Proof: `Domains::LastEpochStakingDistribution` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::OperatorIdOwner` (r:0 w:1)
	/// Proof: `Domains::OperatorIdOwner` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::OperatorEpochSharePrice` (r:0 w:1)
	/// Proof: `Domains::OperatorEpochSharePrice` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn register_operator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `684`
		//  Estimated: `6196`
		// Minimum execution time: 172_296_000 picoseconds.
		Weight::from_parts(179_666_000, 0)
			.saturating_add(Weight::from_parts(0, 6196))
			.saturating_add(T::DbWeight::get().reads(17))
			.saturating_add(T::DbWeight::get().writes(13))
	}
	/// Storage: `Domains::Operators` (r:1 w:1)
	/// Proof: `Domains::Operators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestSubmittedER` (r:1 w:0)
	/// Proof: `Domains::LatestSubmittedER` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::PendingStakingOperationCount` (r:1 w:1)
	/// Proof: `Domains::PendingStakingOperationCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainStakingSummary` (r:1 w:0)
	/// Proof: `Domains::DomainStakingSummary` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Domains::DepositOnHold` (r:1 w:1)
	/// Proof: `Domains::DepositOnHold` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `Domains::Deposits` (r:1 w:1)
	/// Proof: `Domains::Deposits` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::OperatorEpochSharePrice` (r:1 w:0)
	/// Proof: `Domains::OperatorEpochSharePrice` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn nominate_operator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1261`
		//  Estimated: `6196`
		// Minimum execution time: 133_327_000 picoseconds.
		Weight::from_parts(140_037_000, 0)
			.saturating_add(Weight::from_parts(0, 6196))
			.saturating_add(T::DbWeight::get().reads(10))
			.saturating_add(T::DbWeight::get().writes(7))
	}
	/// Storage: `Domains::OperatorIdOwner` (r:1 w:0)
	/// Proof: `Domains::OperatorIdOwner` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::Operators` (r:1 w:1)
	/// Proof: `Domains::Operators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestSubmittedER` (r:1 w:0)
	/// Proof: `Domains::LatestSubmittedER` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainStakingSummary` (r:1 w:1)
	/// Proof: `Domains::DomainStakingSummary` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::HeadDomainNumber` (r:1 w:0)
	/// Proof: `Domains::HeadDomainNumber` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `RuntimeConfigs::StakingWithdrawalPeriod` (r:1 w:0)
	/// Proof: `RuntimeConfigs::StakingWithdrawalPeriod` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Domains::DeregisteredOperators` (r:1 w:1)
	/// Proof: `Domains::DeregisteredOperators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn deregister_operator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `711`
		//  Estimated: `4176`
		// Minimum execution time: 46_189_000 picoseconds.
		Weight::from_parts(55_569_000, 0)
			.saturating_add(Weight::from_parts(0, 4176))
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `Domains::Operators` (r:1 w:1)
	/// Proof: `Domains::Operators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestSubmittedER` (r:1 w:0)
	/// Proof: `Domains::LatestSubmittedER` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::PendingStakingOperationCount` (r:1 w:1)
	/// Proof: `Domains::PendingStakingOperationCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainStakingSummary` (r:1 w:0)
	/// Proof: `Domains::DomainStakingSummary` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::Deposits` (r:1 w:1)
	/// Proof: `Domains::Deposits` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::OperatorEpochSharePrice` (r:1 w:0)
	/// Proof: `Domains::OperatorEpochSharePrice` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::Withdrawals` (r:1 w:1)
	/// Proof: `Domains::Withdrawals` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::OperatorIdOwner` (r:1 w:0)
	/// Proof: `Domains::OperatorIdOwner` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `Domains::HeadDomainNumber` (r:1 w:0)
	/// Proof: `Domains::HeadDomainNumber` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `RuntimeConfigs::StakingWithdrawalPeriod` (r:1 w:0)
	/// Proof: `RuntimeConfigs::StakingWithdrawalPeriod` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn withdraw_stake() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1455`
		//  Estimated: `6196`
		// Minimum execution time: 119_678_000 picoseconds.
		Weight::from_parts(128_637_000, 0)
			.saturating_add(Weight::from_parts(0, 6196))
			.saturating_add(T::DbWeight::get().reads(13))
			.saturating_add(T::DbWeight::get().writes(7))
	}
	/// Storage: `Domains::Operators` (r:1 w:0)
	/// Proof: `Domains::Operators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestSubmittedER` (r:1 w:0)
	/// Proof: `Domains::LatestSubmittedER` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainStakingSummary` (r:1 w:0)
	/// Proof: `Domains::DomainStakingSummary` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::Withdrawals` (r:1 w:1)
	/// Proof: `Domains::Withdrawals` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::HeadDomainNumber` (r:1 w:0)
	/// Proof: `Domains::HeadDomainNumber` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DepositOnHold` (r:1 w:1)
	/// Proof: `Domains::DepositOnHold` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `Domains::Deposits` (r:1 w:1)
	/// Proof: `Domains::Deposits` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `w` is `[1, 32]`.
	fn unlock_funds(w: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1191 + w * (36 ±0)`
		//  Estimated: `4656 + w * (36 ±0)`
		// Minimum execution time: 104_997_000 picoseconds.
		Weight::from_parts(118_275_973, 0)
			.saturating_add(Weight::from_parts(0, 4656))
			.saturating_add(T::DbWeight::get().reads(9))
			.saturating_add(T::DbWeight::get().writes(5))
			.saturating_add(Weight::from_parts(0, 36).saturating_mul(w.into()))
	}
	/// Storage: `Domains::Operators` (r:1 w:1)
	/// Proof: `Domains::Operators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestSubmittedER` (r:1 w:0)
	/// Proof: `Domains::LatestSubmittedER` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::HeadDomainNumber` (r:1 w:0)
	/// Proof: `Domains::HeadDomainNumber` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainStakingSummary` (r:1 w:0)
	/// Proof: `Domains::DomainStakingSummary` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:3 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Domains::Deposits` (r:2 w:1)
	/// Proof: `Domains::Deposits` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::OperatorEpochSharePrice` (r:1 w:1)
	/// Proof: `Domains::OperatorEpochSharePrice` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::Withdrawals` (r:2 w:0)
	/// Proof: `Domains::Withdrawals` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DepositOnHold` (r:1 w:1)
	/// Proof: `Domains::DepositOnHold` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `Domains::OperatorHighestSlot` (r:0 w:1)
	/// Proof: `Domains::OperatorHighestSlot` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::OperatorIdOwner` (r:0 w:1)
	/// Proof: `Domains::OperatorIdOwner` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn unlock_nominator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1362`
		//  Estimated: `8799`
		// Minimum execution time: 187_916_000 picoseconds.
		Weight::from_parts(196_776_000, 0)
			.saturating_add(Weight::from_parts(0, 8799))
			.saturating_add(T::DbWeight::get().reads(14))
			.saturating_add(T::DbWeight::get().writes(9))
	}
	/// Storage: `Domains::DomainRegistry` (r:1 w:1)
	/// Proof: `Domains::DomainRegistry` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn update_domain_operator_allow_list() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `526`
		//  Estimated: `3991`
		// Minimum execution time: 29_640_000 picoseconds.
		Weight::from_parts(31_689_000, 0)
			.saturating_add(Weight::from_parts(0, 3991))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn transfer_treasury_funds() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `52`
		//  Estimated: `6196`
		// Minimum execution time: 36_199_000 picoseconds.
		Weight::from_parts(36_729_000, 0)
			.saturating_add(Weight::from_parts(0, 6196))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `Domains::HeadReceiptNumber` (r:1 w:1)
	/// Proof: `Domains::HeadReceiptNumber` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::NewAddedHeadReceipt` (r:1 w:1)
	/// Proof: `Domains::NewAddedHeadReceipt` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestConfirmedDomainExecutionReceipt` (r:1 w:0)
	/// Proof: `Domains::LatestConfirmedDomainExecutionReceipt` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::ExecutionInbox` (r:1 w:0)
	/// Proof: `Domains::ExecutionInbox` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::PendingSlashes` (r:1 w:0)
	/// Proof: `Domains::PendingSlashes` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::InvalidBundleAuthors` (r:1 w:1)
	/// Proof: `Domains::InvalidBundleAuthors` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainStakingSummary` (r:1 w:1)
	/// Proof: `Domains::DomainStakingSummary` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::BlockTree` (r:1 w:1)
	/// Proof: `Domains::BlockTree` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `RuntimeConfigs::DomainBlockPruningDepth` (r:1 w:0)
	/// Proof: `RuntimeConfigs::DomainBlockPruningDepth` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Domains::LatestSubmittedER` (r:1 w:1)
	/// Proof: `Domains::LatestSubmittedER` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::BlockTreeNodes` (r:0 w:1)
	/// Proof: `Domains::BlockTreeNodes` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn submit_receipt() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `773`
		//  Estimated: `4238`
		// Minimum execution time: 64_938_000 picoseconds.
		Weight::from_parts(66_248_000, 0)
			.saturating_add(Weight::from_parts(0, 4238))
			.saturating_add(T::DbWeight::get().reads(10))
			.saturating_add(T::DbWeight::get().writes(7))
	}
	/// Storage: `Domains::PreviousBundleAndExecutionReceiptVersions` (r:1 w:0)
	/// Proof: `Domains::PreviousBundleAndExecutionReceiptVersions` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainRegistry` (r:1 w:0)
	/// Proof: `Domains::DomainRegistry` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::HeadDomainNumber` (r:1 w:0)
	/// Proof: `Domains::HeadDomainNumber` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::ExecutionInbox` (r:2 w:0)
	/// Proof: `Domains::ExecutionInbox` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainRuntimeUpgradeRecords` (r:1 w:0)
	/// Proof: `Domains::DomainRuntimeUpgradeRecords` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::HeadReceiptNumber` (r:1 w:0)
	/// Proof: `Domains::HeadReceiptNumber` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `RuntimeConfigs::EnableDynamicCostOfStorage` (r:1 w:0)
	/// Proof: `RuntimeConfigs::EnableDynamicCostOfStorage` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `TransactionFees::CollectedBlockFees` (r:1 w:1)
	/// Proof: `TransactionFees::CollectedBlockFees` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::FrozenDomains` (r:1 w:0)
	/// Proof: `Domains::FrozenDomains` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::Operators` (r:1 w:0)
	/// Proof: `Domains::Operators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestSubmittedER` (r:1 w:0)
	/// Proof: `Domains::LatestSubmittedER` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::OperatorHighestSlot` (r:1 w:0)
	/// Proof: `Domains::OperatorHighestSlot` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::OperatorBundleSlot` (r:1 w:0)
	/// Proof: `Domains::OperatorBundleSlot` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LastEpochStakingDistribution` (r:1 w:0)
	/// Proof: `Domains::LastEpochStakingDistribution` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainStakingSummary` (r:1 w:0)
	/// Proof: `Domains::DomainStakingSummary` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Subspace::BlockSlots` (r:1 w:0)
	/// Proof: `Subspace::BlockSlots` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `System::BlockHash` (r:1 w:0)
	/// Proof: `System::BlockHash` (`max_values`: None, `max_size`: Some(44), added: 2519, mode: `MaxEncodedLen`)
	/// Storage: `Domains::NewAddedHeadReceipt` (r:1 w:0)
	/// Proof: `Domains::NewAddedHeadReceipt` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestConfirmedDomainExecutionReceipt` (r:1 w:0)
	/// Proof: `Domains::LatestConfirmedDomainExecutionReceipt` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::ConsensusBlockHash` (r:1 w:0)
	/// Proof: `Domains::ConsensusBlockHash` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::BlockTree` (r:1 w:0)
	/// Proof: `Domains::BlockTree` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn validate_submit_bundle() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1467`
		//  Estimated: `7407`
		// Minimum execution time: 596_047_000 picoseconds.
		Weight::from_parts(607_967_000, 0)
			.saturating_add(Weight::from_parts(0, 7407))
			.saturating_add(T::DbWeight::get().reads(23))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `Domains::DomainRegistry` (r:1 w:0)
	/// Proof: `Domains::DomainRegistry` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::HeadDomainNumber` (r:1 w:0)
	/// Proof: `Domains::HeadDomainNumber` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::ExecutionInbox` (r:2 w:0)
	/// Proof: `Domains::ExecutionInbox` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainRuntimeUpgradeRecords` (r:1 w:0)
	/// Proof: `Domains::DomainRuntimeUpgradeRecords` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::HeadReceiptNumber` (r:1 w:0)
	/// Proof: `Domains::HeadReceiptNumber` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `RuntimeConfigs::EnableDynamicCostOfStorage` (r:1 w:0)
	/// Proof: `RuntimeConfigs::EnableDynamicCostOfStorage` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `TransactionFees::CollectedBlockFees` (r:1 w:1)
	/// Proof: `TransactionFees::CollectedBlockFees` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::PreviousBundleAndExecutionReceiptVersions` (r:1 w:0)
	/// Proof: `Domains::PreviousBundleAndExecutionReceiptVersions` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::FrozenDomains` (r:1 w:0)
	/// Proof: `Domains::FrozenDomains` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::Operators` (r:1 w:0)
	/// Proof: `Domains::Operators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestSubmittedER` (r:1 w:0)
	/// Proof: `Domains::LatestSubmittedER` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::OperatorHighestSlot` (r:1 w:0)
	/// Proof: `Domains::OperatorHighestSlot` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::OperatorBundleSlot` (r:1 w:0)
	/// Proof: `Domains::OperatorBundleSlot` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LastEpochStakingDistribution` (r:1 w:0)
	/// Proof: `Domains::LastEpochStakingDistribution` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainStakingSummary` (r:1 w:0)
	/// Proof: `Domains::DomainStakingSummary` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Subspace::BlockSlots` (r:1 w:0)
	/// Proof: `Subspace::BlockSlots` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `System::BlockHash` (r:1 w:0)
	/// Proof: `System::BlockHash` (`max_values`: None, `max_size`: Some(44), added: 2519, mode: `MaxEncodedLen`)
	/// Storage: `Domains::NewAddedHeadReceipt` (r:1 w:0)
	/// Proof: `Domains::NewAddedHeadReceipt` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestConfirmedDomainExecutionReceipt` (r:1 w:0)
	/// Proof: `Domains::LatestConfirmedDomainExecutionReceipt` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::ConsensusBlockHash` (r:1 w:0)
	/// Proof: `Domains::ConsensusBlockHash` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::BlockTree` (r:1 w:0)
	/// Proof: `Domains::BlockTree` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn validate_singleton_receipt() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1497`
		//  Estimated: `7437`
		// Minimum execution time: 593_917_000 picoseconds.
		Weight::from_parts(604_857_000, 0)
			.saturating_add(Weight::from_parts(0, 7437))
			.saturating_add(T::DbWeight::get().reads(23))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `Domains::BlockTreeNodes` (r:2 w:0)
	/// Proof: `Domains::BlockTreeNodes` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::HeadReceiptNumber` (r:1 w:0)
	/// Proof: `Domains::HeadReceiptNumber` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainRegistry` (r:1 w:0)
	/// Proof: `Domains::DomainRegistry` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::RuntimeRegistry` (r:1 w:0)
	/// Proof: `Domains::RuntimeRegistry` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestConfirmedDomainExecutionReceipt` (r:1 w:0)
	/// Proof: `Domains::LatestConfirmedDomainExecutionReceipt` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn fraud_proof_pre_check() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2483106`
		//  Estimated: `2489046`
		// Minimum execution time: 1_446_039_000 picoseconds.
		Weight::from_parts(1_478_279_000, 0)
			.saturating_add(Weight::from_parts(0, 2489046))
			.saturating_add(T::DbWeight::get().reads(6))
	}
	/// Storage: `Domains::Operators` (r:1 w:1)
	/// Proof: `Domains::Operators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestSubmittedER` (r:1 w:0)
	/// Proof: `Domains::LatestSubmittedER` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainStakingSummary` (r:1 w:1)
	/// Proof: `Domains::DomainStakingSummary` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DeactivatedOperators` (r:1 w:1)
	/// Proof: `Domains::DeactivatedOperators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn deactivate_operator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `644`
		//  Estimated: `4109`
		// Minimum execution time: 43_249_000 picoseconds.
		Weight::from_parts(44_909_000, 0)
			.saturating_add(Weight::from_parts(0, 4109))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `Domains::Operators` (r:1 w:1)
	/// Proof: `Domains::Operators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestSubmittedER` (r:1 w:0)
	/// Proof: `Domains::LatestSubmittedER` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainStakingSummary` (r:1 w:1)
	/// Proof: `Domains::DomainStakingSummary` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DeactivatedOperators` (r:1 w:1)
	/// Proof: `Domains::DeactivatedOperators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn reactivate_operator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `614`
		//  Estimated: `4079`
		// Minimum execution time: 36_599_000 picoseconds.
		Weight::from_parts(39_189_000, 0)
			.saturating_add(Weight::from_parts(0, 4079))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `Domains::OperatorIdOwner` (r:1 w:0)
	/// Proof: `Domains::OperatorIdOwner` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::Operators` (r:1 w:1)
	/// Proof: `Domains::Operators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestSubmittedER` (r:1 w:0)
	/// Proof: `Domains::LatestSubmittedER` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainStakingSummary` (r:1 w:1)
	/// Proof: `Domains::DomainStakingSummary` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::HeadDomainNumber` (r:1 w:0)
	/// Proof: `Domains::HeadDomainNumber` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `RuntimeConfigs::StakingWithdrawalPeriod` (r:1 w:0)
	/// Proof: `RuntimeConfigs::StakingWithdrawalPeriod` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Domains::DeactivatedOperators` (r:1 w:1)
	/// Proof: `Domains::DeactivatedOperators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DeregisteredOperators` (r:1 w:1)
	/// Proof: `Domains::DeregisteredOperators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn deregister_deactivated_operator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `744`
		//  Estimated: `4209`
		// Minimum execution time: 44_769_000 picoseconds.
		Weight::from_parts(48_629_000, 0)
			.saturating_add(Weight::from_parts(0, 4209))
			.saturating_add(T::DbWeight::get().reads(8))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: `Domains::Operators` (r:1 w:1)
	/// Proof: `Domains::Operators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestSubmittedER` (r:1 w:0)
	/// Proof: `Domains::LatestSubmittedER` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::PendingStakingOperationCount` (r:1 w:1)
	/// Proof: `Domains::PendingStakingOperationCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainStakingSummary` (r:1 w:0)
	/// Proof: `Domains::DomainStakingSummary` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::Deposits` (r:1 w:1)
	/// Proof: `Domains::Deposits` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::OperatorEpochSharePrice` (r:1 w:0)
	/// Proof: `Domains::OperatorEpochSharePrice` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::Withdrawals` (r:1 w:1)
	/// Proof: `Domains::Withdrawals` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DeactivatedOperators` (r:1 w:1)
	/// Proof: `Domains::DeactivatedOperators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::OperatorIdOwner` (r:1 w:0)
	/// Proof: `Domains::OperatorIdOwner` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `Domains::HeadDomainNumber` (r:1 w:0)
	/// Proof: `Domains::HeadDomainNumber` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `RuntimeConfigs::StakingWithdrawalPeriod` (r:1 w:0)
	/// Proof: `RuntimeConfigs::StakingWithdrawalPeriod` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn withdraw_stake_from_deactivated_operator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1456`
		//  Estimated: `6196`
		// Minimum execution time: 119_118_000 picoseconds.
		Weight::from_parts(124_598_000, 0)
			.saturating_add(Weight::from_parts(0, 6196))
			.saturating_add(T::DbWeight::get().reads(14))
			.saturating_add(T::DbWeight::get().writes(8))
	}
}
