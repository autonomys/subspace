searchState.loadedDescShard("sp_domains_fraud_proof", 0, "Subspace fraud proof primitives for consensus chain.\nType that maybe holds an encoded update domain chain …\nHolds an encoded set_code extrinsic with an upgraded …\nHolds an encoded extrinsic with updates.\nAPI necessary for fraud proof.\nDomains fraud proof host function\nTrait to query and verify Domains Fraud proof.\nTrait Impl to query and verify Domains Fraud proof.\nProvides implementations for the extern host functions.\nCustom invalid validity code for the extrinsics in …\nNo runtime upgrade.\nNo updates\nType that maybe holds an encoded set_code extrinsic with …\nType that specifies the request of storage keys\nDomain’s transfers storage key\nDerive the bundle digest for the given bundle body.\nCheck the execution proof\nThis module provides the feature of generating and …\nDomain fraud proof related runtime interface\nReturn the storage key used in fraud proof\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new instance of <code>FraudProofExtension</code>.\nSubmit the fraud proof via an unsigned extrinsic.\nCreates storage proof for verifying an execution without …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nConstructs a new instance of <code>ExecutionProver</code>.\nReturns a storage proof which can be used to reconstruct a …\nExecutes some extrinsic.\nMismatch type possible for ApplyExtrinsic execution phase\nFailed to pass the execution proof check.\nBundle with requested index not found in execution receipt\nDummy fraud proof only used in tests and benchmarks\nA phase of a block’s execution, carrying necessary …\nExtrinsic with requested index not found in bundle\nFailed to check extrinsics in single context\nFailed to derive bundle digest\nFailed to derive domain inherent extrinsic\nFailed to get bundle weight\nFailed to get domain runtime call response\nFailed to derive domain storage key\nExecutes the <code>finalize_block</code> hook.\nMismatch type possible for FinalizBlock execution phase\nFraud proof for domains.\nFailed to decode the header produced by <code>finalize_block</code>.\nExecutes the <code>initialize_block</code> hook.\nFailed to decode the return value of <code>initialize_block</code> and …\nRepresents an invalid block fees proof.\nInvalid bundle digest\nA proof about a bundle that was marked invalid (but might …\nInvalid versioned bundle proof data.\nRepresents an invalid domain block hash fraud proof.\nThe fraud proof prove nothing invalid\nProves an invalid state transition by challenging the …\nRepresents an invalid transfers proof.\nFailed to decode the storage root produced by verifying …\nThe target valid bundle not found from the target bad …\nUnexpected invalid bundle proof data\nInvalid bundle entry in bad receipt was expected to be …\nRepresents a valid bundle index and all the extrinsics …\nFraud proof for the valid bundles in …\nError type of fraud proof verification on consensus node.\nHash of the bad receipt this fraud proof targeted\n<code>Vec&lt;(tx_signer, tx_hash)&gt;</code> of all extrinsics\nIndex of this bundle in the original list of bundles in …\nThe targeted bundle with proof\nReturns the post state root for the given execution result.\nDigests storage proof that is used to derive Domain block …\nStorage proof for a change to the chains that are allowed …\nOptional sudo extrinsic call storage proof\nOptional EVM domain “set contract creation allowed by” …\nReturns the method for generating the proof.\nExecution phase.\nProof recorded during the computation.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe invalid bundle type that the bundle was marked with.\nThe combined storage proofs used during verification\nIf <code>true</code>, the fraud proof must prove the bundle was …\nReturns true if execution phase refers to mismatch between …\nThe domain runtime code storage proof\nA single domain runtime code upgrade (or “not upgraded”…\nThe MMR proof for the consensus state root that is used to …\nThe specific fraud proof variant\nProof data of the bundle which was marked invalid.\nStorage witness needed for verifying this proof.\nStorage witness needed for verifying this proof.\nValid Bundle digests\nProvides implementations for the extern host functions.\nDerive the bundle digest for the given bundle body.\nCheck the execution proof with also included domain block …\nTrait to get storage keys in the runtime i.e. when …\nTrait to get storage keys in the client i.e. when …\nA proof of a single domain runtime upgrade (or that there …\nBundle with proof data for fraud proof.\nTransaction byte fee, derived from dynamic cost of storage …\nA list of domain runtime upgrades for a block.\nExtrinsics shuffling seed, derived from block randomness\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGenerate the <code>MaybeDomainRuntimeUpgradedProof</code>. It is the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe new domain runtime code, if the domain runtime was …\nBlock timestamp\nVerify if the <code>bundle</code> does commit to the given <code>state_root</code>\nVerifies invalid block fees fraud proof.\nVerifies invalid domain block hash fraud proof.\nVerifies invalid domain extrinsic root fraud proof.\nVerifies invalid state transition fraud proof.\nVerifies invalid transfers fraud proof.\nVerifies valid bundle fraud proof.")