searchState.loadedDescShard("pallet_domains", 0, "Pallet Domains\nInvalid signature on the bundle header.\nOperator submitted bad Execution receipt.\nBad MMR proof, it may due to the proof is expired or it is …\nOperator is not allowed to produce bundles in current …\nThe bad receipt already reported by a previous fraud proof\nThe targeted bad receipt not found which may already …\nBad/Invalid valid bundle fraud proof\nInvalid vrf signature in the proof of election.\nCombined fraud proof data for the InvalidInherentExtrinsic …\nThe block slot\nThe block timestamp\nBlock tree specific errors\nThe block tree pruning depth.\nHow many block a bundle should still consider as valid …\nBundle storage fund specific errors\nA domain bundle was included.\nBundle weight exceeds the max bundle weight limit\nBundle size exceed the max bundle size limit in the domain …\nBundle version mismatch\nContains a variant per dispatchable extrinsic that this …\nThe genesis receipt is unchallengeable.\nConfiguration trait of this pallet.\nSame with <code>pallet_subspace::Config::ConfirmationDepthK</code>.\nMap of consensus block hashes.\nConsensus chain slot probability.\nCurrency type used by the domains for staking and other …\nCurrent bundle version accepted by the runtime.\nStorage for operators who were de-activated during this …\nStorage for operators who de-registered in the current …\nThe descendants of the fraudulent ER is not pruned\nPost hook to notify accepted domain bundles in previous …\nStorage for chain rewards specific to each domain. These …\nDomain is frozen and cannot accept new bundles\nStorage to hold all the domain’s genesis execution …\nDomain block hash type.\nThe domain header type.\nThe amount of fund to be locked up for the domain instance …\nDomain must be frozen before execution receipt can be …\nOrigin for domain call.\nDomain registry specific errors\nThe domain runtime code proof is not provided\nTemporary storage to keep track of domain runtime upgrades …\nDomain Sudo call already exists.\nTemporary storage to hold the sudo calls meant for domains.\nDomain tx range is adjusted after every …\nTransfers tracker.\nEnsure the domain origin.\nStores the slot at which a new epoch has started.\nEquivocated bundle in current block\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nStored the occupied evm chain id against a domain_id.\nEVM Domain “set contract creation allowed by” call …\nTemporary storage to hold the “set contract creation …\nA set of <code>BundleDigest</code> from all bundles that successfully …\nExecution receipt version mismatch\nExecution receipt version missing\nExpecting receipt gap when validating <code>submit_receipt</code>\nFailed to get missed domain runtime upgrade count\nInvalid fraud proof.\nFraud proof storage key provider\nStorage that hold a list of all frozen domains.\nCan be used to configure the genesis state of this pallet.\nA variation of the Identifier used for holding the funds …\nInitial domain tx range value.\nInvalid fraud proof since block fees are not mismatched.\nOperator produced bad bundle.\nStorage for operators who are marked as invalid bundle …\nInvalid bundles fraud proof\nInvalid domain block hash fraud proof.\nCan not find the domain for given domain id.\nInvalid Domain sudo call.\nBundle with an invalid extrinsic root\nInvalid domain extrinsic fraud proof\nCan not find the operator for given operator id.\nInvalid proof of time in the proof of election\nInvalid state transition fraud proof\nInvalid Threshold.\nInvalid fraud proof since transfers are not mismatched.\nStorage to hold all the domain’s latest confirmed block.\nMaximum number of nominators to slash within a give …\nThe maximum block size limit for all domain.\nThe maximum block weight limit for all domain.\nThe maximum domain name length limit for all domain.\nUpper limit for total initial accounts domains\nThe maximum number of pending staking operation that can …\nMinimum balance for each initial domain account\nMinimum nominator stake required to nominate and operator.\nMinimum operator stake required to become operator of a …\nMissing MMR proof\nMissing operator.\nHash type of MMR\nMMR proof verifier\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nAccount is not a Domain owner or root.\nDomain is not a private EVM domain.\nHook to handle chain rewards.\nA hook to call after a domain is instantiated\nOperator activation delay after deactivation in Epochs.\nStores the number of bundles each operator submitted in a …\nShare price for the operator pool at the end of Domain …\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe pallet-domains’s pallet id.\nParent receipt not found.\nPermissioned action is not allowed by the caller.\nStorage that hold a previous versions of Bundle and …\nRandomness source.\nCustom origin for validated unsigned extrinsics.\nAn invalid execution receipt found in the bundle.\nDomain runtime not found\nStorage type is <code>StorageMap</code> with key type <code>RuntimeId</code> and …\nRuntime registry specific errors\nType representing the shares in the staking protocol.\nReason for slashing an operator\nThe bundle is built on a slot in the future\nThe bundle is built on a slot in the past\nThe bundle slot is smaller then the highest slot from …\nDomain epoch transition interval\nMinimum number of blocks after which any finalized …\nStaking related errors.\nStaking epoch specific errors.\nStorage fee interface used to deal with bundle storage fee\nThe storage proof is invalid\nBundles submitted successfully in current block.\nFailed to pass the threshold check.\nTreasury account.\nPer-domain state for tx range calculation.\nThe operator’s bundle storage fund unable to pay the …\nThe domain runtime code proof is unexpected\nUnexpected fraud proof.\nUnexpected MMR proof\nUnexpected receipt gap when validating <code>submit_bundle</code>\nV0 version of the domain bundle.\nWeight functions needed for pallet_domains.\nWeight information for extrinsics in this pallet.\nThe max number of withdrawals per nominator that may exist …\nHash of the bad receipt this fraud proof targeted\nDomain block tree\nBundle storage fund\nCalculates the new tx range based on the bundles produced …\nAn auto-generated getter for <code>ConsensusBlockHash</code>.\nThe external function used to access the consensus …\nReturns the current bundle and execution receipt versions.\nReturns the slot at the current block height\nDeactivate an offline operator through Sudo or Governance.\nDeactivate an offline operator through Sudo or Governance.\nAuto-generated docs-only module listing all defined …\nReturns the domain bundle limit of the given domain\nAn auto-generated getter for …\nDomain registry for domains\nAn auto-generated getter for <code>DomainStakingSummary</code>.\nReturns domain’s sudo call, if any.\nReturns the tx range for the domain.\nReturns EVM domain’s “set contract creation allowed by…\nThe full ER for this block.\nExtensions for unsigned general extrinsics\nThe external function used to access the extrinsics …\nForce staking epoch transition for a given domain\nForce staking epoch transition for a given domain\nFreezes a given domain. A frozen domain does not accept …\nFreezes a given domain. A frozen domain does not accept …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the highest valid slot for the given <code>block_number</code>. …\nReturns the best execution chain number.\nBlocks in the current adjustment interval.\nBundles in the current adjustment interval.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the Domain is registered.\nReturns true if this is an EVM domain.\nReturns true if this is a private EVM domain.\nReturns the latest confirmed domain block number for a …\nAn auto-generated getter for …\nAn auto-generated getter for <code>LatestSubmittedER</code>.\nThe domain runtime code storage proof\nThe MMR proof for the consensus state root that is used to …\nMigration module for Domains\nCreate a call with the variant <code>deactivate_operator</code>.\nCreate a call with the variant <code>deregister_operator</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>freeze_domain</code>.\nCreate a call with the variant <code>instantiate_domain</code>.\nCreate a call with the variant <code>nominate_operator</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>reactivate_operator</code>.\nCreate a call with the variant <code>register_domain_runtime</code>.\nCreate a call with the variant <code>register_operator</code>.\nCreate a call with the variant <code>send_domain_sudo_call</code>.\nCreate a call with the variant …\nCreate a call with the variant …\nCreate a call with the variant <code>submit_bundle</code>.\nCreate a call with the variant <code>submit_fraud_proof</code>.\nCreate a call with the variant <code>submit_receipt</code>.\nCreate a call with the variant <code>transfer_treasury_funds</code>.\nCreate a call with the variant <code>unfreeze_domain</code>.\nCreate a call with the variant <code>unlock_funds</code>.\nCreate a call with the variant <code>unlock_nominator</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>upgrade_domain_runtime</code>.\nCreate a call with the variant <code>withdraw_stake</code>.\nAn auto-generated getter for <code>NextDomainId</code>.\nReturns the complete nominator position for a given …\nReturns if there are any ERs in the challenge period that …\nReturns the block number of the oldest existing …\nCalled when a bundle is added to the current block.\nA set of all operators who have committed to this ER …\nThe specific fraud proof variant\nPrunes a given execution receipt for given frozen domain. …\nPrunes a given execution receipt for given frozen domain. …\nReactivate a deactivated operator through Sudo or …\nReactivate a deactivated operator through Sudo or …\nReward the active operators of this domain epoch.\nReturns the runtime ID for the supplied <code>domain_id</code>, if that …\nRuntime registry for domains\nReturns the list of runtime upgrades in the current block.\nSubmit a domain sudo call.\nSubmit a domain sudo call.\nSubmit an EVM domain “set contract creation allowed by”…\nSubmit an EVM domain “set contract creation allowed by”…\nStore the Bundle and Er versions before runtime is …\nUpdate permissioned action allowed by storage by Sudo.\nUpdate permissioned action allowed by storage by Sudo.\nSignature of the receipt bundle.\nA collection of the receipt.\nReturns the latest block number whose slot is less than …\nStaking for domains\nAuto-generated docs-only module listing all (public and …\nSubmits an unsigned extrinsic <code>Call::submit_bundle</code>.\nSubmits an unsigned extrinsic <code>Call::submit_fraud_proof</code>.\nSubmits an unsigned extrinsic <code>Call::submit_receipt</code>.\nThe external function used to access the timestamp stored …\nTransfer funds from treasury to given account\nTransfer funds from treasury to given account\nCurrent tx range.\nUnfreezes a frozen domain.\nUnfreezes a frozen domain.\nUnlocks the first withdrawal given the unlocking period is …\nUnlocks the first withdrawal given the unlocking period is …\nUnlocks the nominator under given operator given the …\nUnlocks the nominator under given operator given the …\nExtrinsic to update domain’s operator allow list. Note:\nExtrinsic to update domain’s operator allow list. Note:\nAutogenerated weights for <code>pallet_domains</code>\nBlock tree specific errors\nThe full ER for this block.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA set of all operators who have committed to this ER …\nThe type of system account being created.\nBundle storage fund specific errors\nThe proportion of staking fund reserved for the bundle …\nCharge the bundle storage fee from the operator’s bundle …\nSplit the new deposit into 2 parts: the staking deposit …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRefund the paid bundle storage fee of a particular domain …\nReturn the bundle storage fund account of the given …\nReturn the bundle storage fund redeem price\nReturn the total balance of the bundle storage fund the …\nTransfer all of the balance of the bundle storage fund to …\nTransfer the given <code>withdraw_amount</code> of balance from the …\nTransfer the given <code>withdraw_amount</code> of balance from the …\nDeactivate an offline operator through Sudo or Governance.\nWarning: Doc-Only\nForce staking epoch transition for a given domain\nFreezes a given domain. A frozen domain does not accept …\nWarning: Doc-Only\nWarning: Doc-Only\nPrunes a given execution receipt for given frozen domain. …\nReactivate a deactivated operator through Sudo or …\nWarning: Doc-Only\nWarning: Doc-Only\nSubmit a domain sudo call.\nSubmit an EVM domain “set contract creation allowed by”…\nUpdate permissioned action allowed by storage by Sudo.\nWarning: Doc-Only\nWarning: Doc-Only\nWarning: Doc-Only\nTransfer funds from treasury to given account\nUnfreezes a frozen domain.\nUnlocks the first withdrawal given the unlocking period is …\nUnlocks the nominator under given operator given the …\nExtrinsic to update domain’s operator allow list. Note:\nWarning: Doc-Only\nWarning: Doc-Only\nParameters of the <code>instantiate_domain</code> call, it is similar …\nDomain registry specific errors\nThe probability of successful bundle in a slot (active …\nThe consensus chain block number when the domain first …\nThe domain config.\nThe amount of balance hold on the domain owner account\nA user defined name for this domain, should be a …\nConfigurations for a specific type of domain runtime, for …\nDomain runtime specific information.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe hash of the genesis execution receipt for this domain.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe max bundle size for this domain, may not exceed the …\nThe max bundle weight for this domain, may not exceed the …\nAccounts allowed to operate on this domain.\nThe address of the domain creator, used to validate …\nA pointer to the <code>RuntimeRegistry</code> entry for this domain.\nTrait to check if the Domains are enabled on Consensus.\nExtensions for pallet-domains unsigned extrinsics.\nTrait to convert Runtime call to possible Domains call.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCheck if the domains are enabled on Runtime.\nRuntime specific errors\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOperator was deactivated due to being offline. Operator …\nDe-registered at given domain epoch.\nUnique epoch identifier across all domains. A combination …\nType that represents an operator details.\nType that represents an operator status.\nA share price is parts per billion of shares/ai3. Note: …\nReturns true if the operator can submit a bundle.\nCurrent epoch index for the domain.\nOperator’s current Epoch rewards\nCurrent operators for this epoch\nTotal shares of all the nominators under this operator.\nTotal active stake of combined nominators under this …\nTotal active stake for the current epoch.\nTotal deposits during the previous epoch\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the operator is either Registered or …\nOperators for the next epoch.\nTotal balance deposited to the bundle storage fund\nTotal withdrew shares during the previous epoch\nAccumulate treasury funds temporarily until the funds are …\nCombined fraud proof data for the InvalidInherentExtrinsic …\nThe domain block tree, map (<code>domain_id</code>, <code>domain_block_number</code>…\nMapping of block tree node hash to the node, each node …\nMap of consensus block hashes.\nStorage for operators who were de-activated during this …\nThe amount of balance the nominator hold for a given …\nList of all deposits for given Operator.\nStorage for operators who de-registered in the current …\nStorage for chain rewards specific to each domain. These …\nStorage to hold all the domain’s genesis execution …\nThe domain registry\nStorage used to keep track of which consensus block each …\nTemporary storage to keep track of domain runtime upgrades …\nWarning: Doc-Only\nTemporary storage to hold the sudo calls meant for domains.\nWarning: Doc-Only\nStores the slot at which a new epoch has started.\nStored the occupied evm chain id against a domain_id.\nTemporary storage to hold the “set contract creation …\nA set of <code>BundleDigest</code> from all bundles that successfully …\nStorage that hold a list of all frozen domains.\nThe block number of the best domain block, increase by one …\nThe head receipt number of each domain\nA mapping of <code>bundle_header_hash</code> -&gt; <code>bundle_author</code> for all …\nStorage for operators who are marked as invalid bundle …\nA temporary storage to hold any previous epoch details for …\nStorage to hold all the domain’s latest confirmed block.\nThe latest ER submitted by the operator for a given …\nThe hash of the new head receipt added in the current …\nStores the next domain id.\nWarning: Doc-Only\nStores the next runtime id.\nStores the number of bundles each operator submitted in a …\nThe set of slot of the bundle submitted by an operator in …\nShare price for the operator pool at the end of Domain …\nThe highest slot of the bundle submitted by an operator\nWarning: Doc-Only\nList of all registered operators and their configuration.\nA list operators who were slashed during the current epoch …\nThe pending staking operation count of the current epoch, …\nStorage for PermissionedActions for domain instantiation …\nStorage that hold a previous versions of Bundle and …\nWarning: Doc-Only\nWarning: Doc-Only\nBundles submitted successfully in current block.\nList of all withdrawals for a given operator.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWeight functions for <code>pallet_domains</code>.\nStorage: <code>Domains::Operators</code> (r:200 w:100) Proof: …\nStorage: <code>Domains::Operators</code> (r:1 w:1) Proof: …\nStorage: <code>Domains::OperatorIdOwner</code> (r:1 w:0) Proof: …\nStorage: <code>Domains::OperatorIdOwner</code> (r:1 w:0) Proof: …\nStorage: <code>Domains::DomainStakingSummary</code> (r:1 w:1) Proof: …\nStorage: <code>Domains::BlockTreeNodes</code> (r:2 w:0) Proof: …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nStorage: <code>Domains::BlockTree</code> (r:1 w:1) Proof: …\nStorage: <code>Domains::PermissionedActionAllowedBy</code> (r:1 w:0) …\nCalls <code>U::from(self)</code>.\nStorage: <code>Domains::Operators</code> (r:1 w:1) Proof: …\nStorage: <code>Domains::DomainStakingSummary</code> (r:1 w:1) Proof: …\nStorage: <code>Domains::Operators</code> (r:1 w:1) Proof: …\nStorage: <code>Domains::NextRuntimeId</code> (r:1 w:1) Proof: …\nStorage: <code>Domains::PendingStakingOperationCount</code> (r:1 w:1) …\nStorage: <code>Domains::PendingSlashes</code> (r:1 w:1) Proof: …\nStorage: <code>Domains::HeadReceiptNumber</code> (r:1 w:1) Proof: …\nStorage: <code>Domains::HeadReceiptNumber</code> (r:1 w:1) Proof: …\nStorage: <code>Domains::HeadReceiptNumber</code> (r:1 w:1) Proof: …\nStorage: <code>System::Account</code> (r:2 w:2) Proof: <code>System::Account</code> (…\nStorage: <code>Domains::Operators</code> (r:1 w:0) Proof: …\nStorage: <code>Domains::Operators</code> (r:1 w:1) Proof: …\nStorage: <code>Domains::DomainRegistry</code> (r:1 w:1) Proof: …\nStorage: <code>Domains::RuntimeRegistry</code> (r:1 w:0) Proof: …\nStorage: <code>Domains::DomainRegistry</code> (r:1 w:0) Proof: …\nStorage: <code>Domains::PreviousBundleAndExecutionReceiptVersions</code>…\nStorage: <code>Domains::Operators</code> (r:1 w:1) Proof: …\nStorage: <code>Domains::Operators</code> (r:1 w:1) Proof: …")