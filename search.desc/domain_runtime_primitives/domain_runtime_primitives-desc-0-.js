searchState.loadedDescShard("domain_runtime_primitives", 0, "Common primitives for subspace domain runtime.\nSome way of identifying an account on the chain. We …\nA fully Ethereum-compatible <code>AccountId</code>. Conforms to H160 …\n20 byte account Id. Ex: Ethereum\nAn AccountId20 to MultiAccount converter.\n32 byte account Id.\nAn AccountId32 to MultiAccount converter.\nThe address format for describing accounts.\nIt’s a 20 byte representation.\nIt’s a 32 byte representation.\nBalance of an account.\nAn index to a block.\nFully qualified method name of …\nDefault EVM chain ID used for testing and Genesis domains …\nDefault version of the Extension used to construct the …\nCustom error when balance overflow occurs.\nCustom error when a user tries to create a contract, but …\nCustom error when an EVM nonce overflow occurs.\nThe EVM chain Id type\nComputed as ED = Account data size * Price per byte, where …\nAn ECDSA/SECP256k1 signature.\nAn Ed25519 signature.\nSome way of identifying an account on the EVM chain. We …\nAlias to 512-bit hash when used in the context of a …\nA hash of some data used by the chain.\nIt’s an account ID (pubkey).\nIt’s an account index.\nMultiAccountId used by all the domains to describe their …\nDispatch ratio for domains\nIndex of a transaction in the chain.\nIt’s some arbitrary raw bytes.\nSome raw bytes\nSlot duration that is same as consensus chain runtime.\nAlias to 512-bit hash when used in the context of a …\nExtracts the signer from an unchecked extrinsic.\nAn Sr25519 signature.\nThe portion of the <code>NORMAL_DISPATCH_RATIO</code> that we adjust …\nExtensible conversion trait. Generic over both source and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the value of this parameter type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMaximum block length for all dispatches. This is set to …\nThe maximum domain block weight with 3.25 MiB as proof size\nOpaque types.\nReturns the AccountId of signer.\nMake conversion back.\nOpaque account identifier type.\nOpaque block type.\nOpaque block identifier type.\nIdentify by block header hash.\nOpaque block header type.\nIdentify by block number.\nSimple blob to hold an extrinsic without committing to its …\nA chain-specific digest of data useful for light clients …\nThe accompanying extrinsics.\nThe merkle root of the extrinsics.\nReturns the argument unchanged.\nConvert an encoded extrinsic to an <code>OpaqueExtrinsic</code>.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe block header.\nCalls <code>U::from(self)</code>.\nThe block number.\nThe parent hash.\nThe state trie merkle root")