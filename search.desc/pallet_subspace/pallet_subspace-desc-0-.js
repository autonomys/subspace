searchState.loadedDescShard("pallet_subspace", 0, "Subspace consensus pallet.\nEnsure the subspace origin.\nTrigger an era change, if any should take place.\nA type signifying to Subspace that it should perform era …\nCustom origin for validated unsigned extrinsics.\nExtensions for unsigned general extrinsics\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nTrigger an era change, if any should take place. This …\nAutogenerated weights for pallet_subspace\nWeight info used by this extension\nTrait to convert Runtime call to possible Subspace call.\nSkipped validation\nExtensions for pallet-subspace unsigned extrinsics.\nRepresents the validated call’s used weight\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAutogenerated weights for <code>pallet_subspace_extension</code>\nWeight functions for <code>pallet_subspace_extension</code>.\nWeight functions needed for pallet subspace extension.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: <code>System::BlockHash</code> (r:1 w:0) Proof: …\nStorage: <code>System::BlockHash</code> (r:1 w:0) Proof: …\nAnyone can author new blocks at genesis.\nNumber of slots between slot arrival and when …\nThe current block randomness, updated at block …\nMaximum number of block number to block slot mappings to …\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nDepth <code>K</code> after which a block enters the recorded history (a …\nWhen to enable block/vote rewards\nSubspace requires some logic to be triggered on every …\nThe amount of time, in blocks, that each era should last. …\nThe <code>Error</code> enum of this pallet.\nEvents type.\nNumber of votes expected per block.\nExtension weight information for the pallet’s extensions.\nFarmer vote.\nAuthor of the first block will be able to author blocks …\nCan be used to configure the genesis state of this pallet.\nAt specified height or next block if <code>None</code>\nInitial solution range used for challenges during the very …\nManually with an explicit extrinsic\nHow many pieces one sector is supposed to contain (max)\nMinimum lifetime of a plotted sector, measured in archived …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nIterations are not multiple of number of checkpoints times …\nThe Subspace Pallet\nDelay after block, in slots, when entropy injection takes …\nInterval, in blocks, between blockchain entropy injection …\nInterval, in entropy injection intervals, where to take …\nProof of time slot iterations must increase as hardware …\nProof of time slot iterations update already scheduled\nFraction of pieces from the “recent history” (…\nNumber of latest archived segments that are considered “…\nSpecified root farmer is allowed to author blocks unless …\nThe overarching event type.\nSegment header was stored in blockchain history.\nHow often in slots slots (on average, not counting …\nWhen solution range is below specified threshold\nSolution range adjustment already enabled.\nOrigin for subspace call.\nWeight information for extrinsics in this pallet.\nWho can author blocks at genesis.\nSize of the archived history of the blockchain in bytes\nAn auto-generated getter for <code>BlockSlots</code>.\nCurrent slot number\nAuto-generated docs-only module listing all defined …\nEnable storage access for all users.\nEnable storage access for all users.\nEnable rewards for blocks and votes at specified block …\nWhen rewards should be enabled.\nEnable rewards for blocks and votes at specified block …\nEnable solution range adjustment after every era. Note: No …\nEnable solution range adjustment after every era. Note: No …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nTotal number of pieces in the blockchain\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>enable_authoring_by_anyone</code>.\nCreate a call with the variant <code>enable_rewards_at</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>set_pot_slot_iterations</code>.\nCreate a call with the variant <code>store_segment_headers</code>.\nCreate a call with the variant <code>vote</code>.\nProof of time parameters\nNumber of iterations for proof of time per slot\nAn auto-generated getter for <code>RootPlotPublicKey</code>.\nAn auto-generated getter for <code>SegmentCommitment</code>.\nUpdate proof of time slot iterations\nUpdate proof of time slot iterations\nAn auto-generated getter for <code>ShouldAdjustSolutionRange</code>.\nAn auto-generated getter for <code>SolutionRanges</code>.\nAuto-generated docs-only module listing all (public and …\nSubmit new segment header to the blockchain. This is an …\nSubmit new segment header to the blockchain. This is an …\nSubmit farmer vote that is essentially a header with …\nFarmer vote, currently only used for extra rewards to …\nFarmer vote, currently only used for extra rewards to …\nEnable storage access for all users.\nEnable rewards for blocks and votes at specified block …\nEnable solution range adjustment after every era. Note: No …\nUpdate proof of time slot iterations\nSubmit new segment header to the blockchain. This is an …\nFarmer vote, currently only used for extra rewards to …\nAllow block authoring by anyone or just root.\nThe current block randomness, updated at block …\nBounded mapping from block number to slot\nBlock author information\nVoters in the current block thus far\nWhether the segment headers inherent has been processed in …\nEnable rewards since specified block number.\nEnable rewards when solution range is below this threshold.\nSlot at which current era started.\nOverride solution range during next update\nParent block author information.\nVoters in the parent block (set at the end of the block …\nStorage of previous vote verification data, updated on …\nEntropy that needs to be injected into proof of time chain …\nNumber of iterations for proof of time per slot with …\nRoot plot public key.\nMapping from segment index to corresponding segment …\nStorage to check if the solution range is to be adjusted …\nSolution ranges used for challenges.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWeights for pallet_subspace using the Substrate node and …\nWeight functions needed for pallet_subspace.\nStorage: <code>Subspace::RootPlotPublicKey</code> (r:1 w:0) Proof: …\nStorage: <code>Subspace::EnableRewards</code> (r:1 w:1) Proof: …\nStorage: <code>Subspace::ShouldAdjustSolutionRange</code> (r:1 w:1) …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: <code>Subspace::PotSlotIterations</code> (r:1 w:0) Proof: …\nStorage: <code>Subspace::DidProcessSegmentHeaders</code> (r:1 w:1) …\nStorage: <code>Subspace::BlockList</code> (r:1 w:0) Proof: …")