searchState.loadedDescShard("subspace_kzg", 0, "KZG primitives for Subspace Network\nCommitment to polynomial\nEmbedded KZG settings as bytes, too big for <code>no_std</code> in most …\nWrapper data structure for working with KZG commitment …\nNumber of G1 powers stored in <code>EMBEDDED_KZG_SETTINGS_BYTES</code>\nNumber of G2 powers stored in <code>EMBEDDED_KZG_SETTINGS_BYTES</code>\nCommitment to polynomial\nRepresentation of a single BLS12-381 scalar value.\nWitness for polynomial evaluation\nComputes a <code>Commitment</code> to <code>polynomial</code>\nComputes a <code>Witness</code> of evaluation of <code>polynomial</code> at <code>index</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate new instance with embedded KZG settings.\nNormalize polynomial by removing trailing zeroes\nCreate polynomial from data. Data must be multiple of 32 …\nConvenient conversion from slice of underlying …\nConvenient conversion from slice of underlying …\nConvenient conversion from mutable slice of underlying …\nConvenient conversion from mutable slice of underlying …\nConvenient conversion from mutable slice of scalar to …\nConvenient conversion from mutable slice of commitment to …\nConvenient conversion from slice of optional underlying …\nConvenient conversion from slice of optional underlying …\nConvenient conversion from optional mutable slice of …\nConvenient conversion from optional mutable slice of …\nConvenient conversion from optional mutable slice of …\nConvenient conversion from optional mutable slice of …\nConvenient conversion from slice of optional scalar to …\nConvenient conversion from slice of optional commitment to …\nConvenient conversion from slice of scalar to underlying …\nConvenient conversion from slice of commitment to …\nConvert scalar into bytes\nConvert commitment to raw bytes\nConvert witness to raw bytes\nTry to deserialize commitment from raw bytes\nTry to deserialize witness from raw bytes\nConvert scalar into safe bytes, returns <code>None</code> if not …\nConvenient conversion from vector of underlying …\nConvenient conversion from vector of underlying …\nConvenient conversion from vector of optional underlying …\nConvenient conversion from vector of optional underlying …\nConvenient conversion from vector of optional scalar to …\nConvenient conversion from vector of optional commitment …\nConvenient conversion from vector of scalar to underlying …\nConvenient conversion from vector of commitment to …\nVerifies that <code>value</code> is the evaluation at <code>index</code> of the …")