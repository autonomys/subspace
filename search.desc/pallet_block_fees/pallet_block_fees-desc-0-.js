searchState.loadedDescShard("pallet_block_fees", 0, "Pallet Domain Transaction Fees\nThe balance of an account.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe domain chain byte fee\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nPallet block-fees to store the accumulated rewards of the …\nAn auto-generated getter for <code>CollectedBlockFees</code>.\nAn auto-generated getter for <code>ConsensusChainByteFee</code>.\nAuto-generated docs-only module listing all defined …\nReturn the final domain transaction byte fee, which …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant …\nNote burned balance on domains\nNote chain reward fees.\nNote consensus chain storage fee\nNote the domain execution fee including the storage and …\nAuto-generated docs-only module listing all (public and …\nWarning: Doc-Only\nImplementation of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe accumulated rewards of the current block\nThe consensus chain byte fee\nThe next consensus chain byte fee, it will take affect …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")