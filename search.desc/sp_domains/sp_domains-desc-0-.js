searchState.loadedDescShard("sp_domains", 0, "Primitives for domains pallet.\nAnyone can operate for this domain.\nAutoId-specific domain runtime config.\nBundle and Execution Versions.\nIdentifier of a chain.\nChannel identity.\nExtrinsics shuffling seed\nActual extrinsic data that is inlined since it is less …\nDomain chains allowlist updates.\nPost hook to know if the domain had bundle submitted in …\nDomains specific digest item.\nUnique identifier of a domain.\n<code>DomainInstanceData</code> is used to construct the genesis …\nTrait to check domain owner.\nDomain runtime specific information to create domain raw …\nDomain Sudo runtime call.\nAPIs used to access the domains pallet.\nDomains specific digest items.\nTrait that tracks the balances on Domains.\nEmpty extrinsics root.\nType representing domain epoch.\nEVM Domain “update contract creation allowed by” …\nEVM-specific domain runtime config.\nEVM-specific domain type (and associated data).\nRepresents the extrinsic either as full data or hash of …\nThe Trie root of all extrinsics included in a bundle.\nExtrinsic Hash.\nType alias for Header hash.\nType alias for Header Hashing.\nType alias for Header number.\nInitial tx range = U256::MAX / INITIAL_DOMAIN_TX_RANGE.\nThe field <code>invalid_bundles</code> in <code>ExecutionReceiptFor</code> is …\nReceipt invalidity type.\nKey type for Operator.\nComplete nominator position information for a specific …\nHook to handle chain rewards.\nA hook to call after a domain is instantiated\nType that represents an operator allow list for Domains.\nType representing operator ID\nA type that implements <code>BoundToRuntimeAppPublic</code>, used for …\nAn operator authority keypair. Necessarily equivalent to …\nAn operator authority identifier.\nAn operator authority signature.\nOnly the specific operators are allowed to operate the …\nRepresents a nominator’s pending deposit that hasn’t …\nRepresents a nominator’s pending withdrawal with unlock …\nPermissioned actions allowed by either specific accounts …\nAn EVM domain with a contract creation allow list.\nAn EVM domain where any account can create contracts.\nType representing the runtime ID.\nTypes of runtime pallet domains currently supports\nStake weight in the domain bundle election.\nRepresents a nominator’s storage fee deposit information\nChains that are allowed to open a channel with this chain.\nThe amount of the pending deposit\nReturns the block pruning depth for domains Available from …\nCalculates the max bundle weight and size\nClaims a rejected transfer between chains.\nConfirms a transfer between chains.\nReturns the consensus transaction byte fee that will used …\nReturns the current bundle version that is accepted by …\nCurrent value of the nominator’s position (shares …\nCurrent value adjusted for fund performance (gains/losses)\nAccount info on frame_system on Domains\nReturns the current best block number for the domain.\nReturns the domain bundle limit of the given domain.\nCalled in the next block initialisation if there was a …\nDomain id.\nReturns the domain instance data for the given <code>domain_id</code>.\nReturns the current epoch and the next epoch operators of …\nReturns the current WASM bundle for the given <code>domain_id</code>.\nConfigurations for a specific type of domain runtime, for …\nReturns the domain sudo call for the given domain, if any.\nReturns the current timestamp at the current height.\nTotal issuance storage key for Domains.\nReturns the current Tx range for the given domain Id.\nThe epoch when this deposit will become effective\nIf this is an EVM runtime, returns the chain id.\nReturns the “set contract creation allowed by” call …\nReturns the execution receipt with the given hash.\nExtracts the bundles successfully stored from the given …\nGenerates a randomness seed for extrinsics shuffling.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns genesis execution receipt for domains.\nReturns the genesis state root if not pruned.\nReturns the best execution chain number.\nReturns the initial contract creation allow list, or <code>None</code> …\nInitializes the domain balance\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the receipt exists and is going to be …\nReturns true if the account is the domain owner.\nReturns true if the given domain’s runtime code has been …\nReturns true if the allow list is either <code>Anyone</code> or the …\nReturns true if the EVM domain is private.\nReturns true if the domain is configured as a private EVM …\nReturns true if the EVM domain is public.\nReturns the last confirmed domain block execution receipt.\nReturns the latest confirmed domain block number and hash.\nThe max bundle size for the domain.\nThe max bundle weight for the domain.\nCreates a <code>DomainId</code>.\nReturns the complete nominator position for a given …\nReturns true if there are any ERs in the challenge period …\nNotes a transfer between chains. Balance on from_chain_id …\nChernoff lower-tail threshold for Binomial(S, p).\nReturns the block number of oldest unconfirmed execution …\nOperator index in the OperatorRegistry.\nPending deposit not yet converted to shares\nPending withdrawals with unlock timing\nThe PoT output for <code>slot_number</code>.\nReturns the execution receipt hash of the given domain and …\nReduces a given amount from the domain balance\nRejects a initiated transfer between chains.\nChains that are not allowed to open a channel with this …\nReturns the runtime id for the given <code>domain_id</code>.\nReturns the list of runtime upgrades in the current block.\nThe storage key of the <code>SelfDomainId</code> storage item in …\nChecks if the signer Id hash is within the tx range\nThe slot number.\nThe amount of stake that will be withdrawn\nStorage fee deposit information (original and current …\nThe amount of storage fee deposit that will be refunded\nReturns the balance of the storage fund account.\nSubmits the transaction bundle via an unsigned extrinsic.\nSubmits a singleton receipt via an unsigned extrinsic.\nDigest storage key in frame_system. Unfortunately, the …\nConverts the inner integer to little-endian bytes.\nOriginal amount contributed to storage fees\nTotal shares owned by nominator\nThe domain block number when this withdrawal can be …\nComputes the VRF hash.\nVRF signature.\nThe EVM chain id for this domain.\nThe EVM-specific domain runtime config.\nThe AutoId-specific domain runtime config.\nAccounts initially allowed to create contracts on a …\nVersioned Domain Bundle.\nA digest of the bundle\nBundle Versions.\nTransaction is illegal (unable to pay the fee, etc).\n<code>InboxedBundle</code> represents a bundle that was successfully …\nTransaction is an inherent extrinsic.\nBundle invalidity type\nThe <code>estimated_bundle_weight</code> in the bundle header is invalid\nTransaction is an invalid XDM.\nBundle with opaque extrinsics.\nList of <code>OpaqueBundle</code>.\nTransaction is out of the tx range.\nHeader of bundle holding the references to various …\nFailed to decode the opaque extrinsic.\nV0 version of the domain bundle.\nV0 bundle version\nV0 version of the domain bundle.\nReturn the bundle body length. i.e number of extrinsics in …\nReturn the bundle body size in bytes\nReturns the domain_id of this bundle.\nReturns the estimated weight of the Bundle.\nReturns a mutable reference to Execution receipt.\nReturns the reference to bundle body. ie extrinsics.\nReturn the <code>bundle_extrinsics_root</code>\nThe Merkle root of all new extrinsics included in this …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the hash of this bundle.\nThe hash of the bundle header\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the bundle body consuming the bundle. ie …\nConsumes <code>Bundle</code> to extract the execution receipt.\nReturn the <code>operator_id</code>\nReturns the hash of the inner unsealed header.\nReturns the proof of election on the bundle.\nReturns the reference to proof of election.\nReturns the receipt on the bundle.\nReturn a reference of the execution receipt.\nReturns the sealed header in the Bundle.\nSets bundle extrinsic root.\nSet estimated bundle weight.\nSets extrinsics to the bundle.\nSets proof of election for bundle.\nSets signature of the bundle.\nReturns the signature on the sealed bundle header.\nReturn the bundle size (include header and body) in bytes\nThe size of the bundle body in bytes.\nReturns the slot number at this bundle was constructed.\nDomain bundle v0.\nHeader of bundle.\nThe Merkle root of all new extrinsics included in this …\nThe total (estimated) weight of all extrinsics in the …\nThe accompanying extrinsics.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the hash of this header.\nUnsealed header.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert a bundle with generic extrinsic to a bundle with …\nConstructs a new instance of <code>SealedBundleHeaderV0</code>.\nProof of bundle producer election.\nExecution receipt that should extend the receipt chain or …\nSealed bundle header.\nSignature of the bundle.\nInvalid vrf proof.\nInvalid Threshold.\nThreshold unsatisfied error.\nReturns the election threshold based on the operator stake …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGenerates a domain-specific vrf transcript from given …\nBase API that every domain runtime must implement.\nReturns the storage root after applying the extrinsic.\nReturns the block digest.\nThe accumulated transaction fee of all transactions …\nReturns the storage key for the <code>CollectedBlockFees</code> on …\nReturns the consumed weight of the block.\nChecks the validity of array of extrinsics + pre_dispatch …\nReturns an encoded extrinsic to set domain transaction …\nReturns an extrinsic to update chain allowlist.\nReturns an encoded extrinsic aiming to upgrade the runtime …\nReturns an encoded extrinsic to set timestamp.\nDecodes the domain specific extrinsic from the opaque …\nDecodes a list of domain extrinsics from opaque …\nExtracts the optional signer per extrinsic.\nExtract signer of a given list of extrinsic if all of them …\nReturns extrinsic Era if present.\nReturns the extrinsic weight.\nReturns the sum of a given set of extrinsics weight.\nFind the first inherent extrinsic\nReturns the storage root after initializing the block.\nReturns true if the extrinsic is an inherent extrinsic.\nReturns the transfers for this domain in the block.\nReturns the storage key for the Transfers on Domain.\nReceipt for execution of Domain Bundle.\nReceipt for execution of Domain Bundle holding the mutable …\nReceipt for execution of Domain Bundle holding the …\nExecution Receipt Versions.\nSingleton receipt with operator signature.\nSingleton receipt submit along when there is a gap between …\nType that holds the transfers(in/out) for a given chain.\nV0 execution receipt.\nReturns the Execution receipt as a ref.\nReturns the Block fees of the Execution.\nReturns extrinsics roots of each bundle.\nBurned balances on domain chain\nRewards for the chain.\nReturns the consensus block hash.\nReturns the consensus block number at which ER is derived.\nReturns the consensus block number.\nThe consensus chain storage fee\nReturns Domain block extrinsics root.\nReturns the domain block hash.\nReturns the domain block number.\nThe domain execution fee including the storage and compute …\nReturns the <code>domain_id</code>\nReturns the execution traces of the execution.\nReturns the final state root of the execution.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the genesis ER.\nReturns the hash of this execution receipt.\nReturns the inboxed bundles.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsume this <code>SealedSingletonReceipt</code> and return the receipt\nReturn the <code>operator_id</code>\nReturns the parent’s receipt hash.\nReturns the hash of <code>SingletonReceipt</code>\nProof of receipt producer election.\nReturn the receipt\nThe receipt to submit\nTotal transfers from this domain that were reverted.\nSets consensus block hash on ER\nSets consensus block number on ER\nSets domain block number on ER\nSets final state root on ER\nSets inboxed bundles on Er\nSets parent receipt hash on ER\nSignature of the receipt bundle.\nA collection of the receipt.\nReturn the encode size of <code>SealedSingletonReceipt</code>\nReturn the <code>slot_number</code> of the <code>proof_of_election</code>\nReturns a cloned ER. Used in tests.\nReturns the total fees that was collected and burned on …\nReturns the transfers of the Execution.\nTotal transfers that came into the domain.\nTotal transfers that went out of the domain.\nTotal transfers to this domain that were rejected.\nReturns a valid bundle digest at specific index in the ER.\nReturns the valid bundle digests in the ER.\nReturns indexes of valid bundles.\nReturn the execution receipt version.\nReturn the execution receipt version.\nReceipt V0 of a domain block execution.\nSingleton receipt submit along when there is a gap between …\nCompute and Domain storage fees are shared across …\nCompute and Domain storage fees are shared across …\nThe block hash corresponding to <code>consensus_block_number</code>.\nThe block hash corresponding to <code>consensus_block_number</code>.\nA pointer to the consensus block index which contains all …\nA pointer to the consensus block index which contains all …\nExtrinsic root field of the header of domain block …\nExtrinsic root field of the header of domain block …\nThe block hash corresponding to <code>domain_block_number</code>.\nThe block hash corresponding to <code>domain_block_number</code>.\nThe index of the current domain block that forms the basis …\nThe index of the current domain block that forms the basis …\nList of storage roots collected during the domain block …\nList of storage roots collected during the domain block …\nThe Merkle root of the execution trace for the current …\nThe Merkle root of the execution trace for the current …\nThe final state root for the current domain block …\nThe final state root for the current domain block …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nAll the bundles that being included in the consensus block.\nAll the bundles that being included in the consensus block.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe hash of the ER for the last domain block.\nThe hash of the ER for the last domain block.\nProof of receipt producer election.\nThe receipt to submit\nSignature of the receipt bundle.\nA collection of the receipt.\nList of transfers from this Domain to other chains\nList of transfers from this Domain to other chains\nShuffles the extrinsics in a deterministic way.\nMerkle proof using <code>Blake2b256Algorithm</code>.\nMerkle tree using <code>Blake2b256Algorithm</code>.\nMerke proof based Witness.\nConstructs a merkle tree from given authorities.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIndex of the leaf the proof is for.\nNumber of leaves in the original tree.\nMerkle proof in bytes.\nThreshold for number of bundles operator can produce based …\nFor τ = 1%: ln(1/τ) = ln(100) ≈ 4.605170185988092 …\nExpectations for one operator at epoch end (slots-based, …\nfloor(μ) = floor(S * p_slot_exact): integer expected …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nChernoff lower-bound r: minimum bundles to pass with …\nCompute epoch-end expectations for an operator using the …\nFailed to decode value.\nEmits when the given storage proof is invalid.\nValue doesn’t exist in the Db for the given key.\nType that provides utilities to generate the storage proof.\nType that provides utilities to verify the storage proof.\nStorage proof contains unused nodes after reading the …\nVerification error.\nConstructs the storage key from a given enumerated index.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGenerate storage proof for given index from the trie …\nReturns the value against a given key. Note: Storage proof …\nExtracts the value against a given key and returns a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRaw storage content for genesis block\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nConstruct <code>RawGenesis</code> from a given storage NOTE: This …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert <code>RawGenesis</code> to storage, the opposite of <code>from_storage</code>\nThis is a modified version of trie root that takes trie …")