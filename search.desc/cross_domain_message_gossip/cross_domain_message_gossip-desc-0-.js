searchState.loadedDescShard("cross_domain_message_gossip", 0, "Encoded message with sender info if available.\nUnbounded sender to send encoded message to listeners.\nChannel detail between src and dst chain.\nChannel update message.\nEncoded channel update message.\nGossip worker to gossip incoming and outgoing messages to …\nGossip worker builder\nA cross chain message with encoded data.\nA type of cross chain message\nEncoded XDM message\nBlock hash of the chain at which the channel state is …\nBlock number at which storage proof was generated.\nBuild gossip worker\nChannel identifier.\nChannel id.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nLoad the channel state of self_chain_id on src_chain_id.\nReturns the maybe last processed block number for given …\nGet the gossip message sink\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLatest outbox message nonce for which response was …\nConstruct a gossip worker builder\nNext inbox nonce.\nNext outbox nonce.\nCollect the chain sink that will be used by the gossip …\nStarts the Gossip message worker.\nSet the channel state of self_chain_id on src_chain_id.\nStore the given XDM ID as processed at given block.\nMessage is coming from src_chain.\nState of the channel.\nState root of the chain at the above block height.\nStorage proof of the channel on src_chain.\nReturns the network configuration for cross chain message …")