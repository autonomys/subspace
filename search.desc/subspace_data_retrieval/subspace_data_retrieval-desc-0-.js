searchState.loadedDescShard("subspace_data_retrieval", 0, "Fetching data from the archived history of the Subspace …\nFetching objects stored in the archived history of …\nFetching pieces of the archived history of Subspace …\nGetting object pieces from the Subspace Distributed …\nFetching segments of the archived history of Subspace …\nObject fetching errors.\nHash doesn’t match data\nObject extends beyond block continuation, or the mapping …\nObject length couldn’t be decoded after downloading two …\nUsed to store the last piece downloaded in an object …\nLength prefix is too large error\nMaximum block length for non-<code>Normal</code> extrinsic is 5 MiB. …\nSupplied piece index is not a source piece\nObject fetcher for the Subspace DSN.\nObject is too large error\nPiece getter error\nPiece getter couldn’t find the piece\nSupplied piece offset is inside the minimum segment header …\nSupplied piece offset is too large\nSegment decoding error\nUnexpected segment item error\nUnexpected segment item variant error\nUnknown segment variant error\nAssemble the objects in <code>mapping</code> by fetching necessary …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe maximum object length the implementation in this …\nCreate a new object fetcher with the given configuration.\nThe original <code>anyhow::Error</code>, debug-printed as a string. …\nThe next source piece index after the first two pieces\nThe next source piece index, before we attempted …\nThe object data length, after the concurrent downloads\nThe number of pieces we concurrently downloaded\nThe available object data in the current segment\nConcurrently downloads the exact pieces in <code>piece_indexes</code>, …\nA piece getter that falls back to another piece getter if …\nTrait representing a way to get pieces\nReturns the argument unchanged.\nGet piece by index.\nGet pieces with provided indices.\nA default implementation which gets each piece …\nCalls <code>U::from(self)</code>.\nReturns a piece getter that falls back to <code>other</code> if <code>self</code> …\nNot enough pieces\nPiece getter error\nThe number of times we try to download a segment before …\nThe amount of time we wait between segment download …\nSegment decoding error\nSegment getter errors.\nSegment reconstruction error\nConcurrently downloads the pieces for <code>segment_index</code>, and …\nDownloads pieces of a segment so that segment can be …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nNumber of pieces that were downloaded\nThe segment we were trying to download")