searchState.loadedDescShard("sp_consensus_subspace", 0, "Primitives for Subspace consensus.\nSubspace blockchain constants.\nA KZG extension.\nA Poof of space extension.\nProof of time checkpoints that were not seen before\nA Poof of time extension.\nNext slot input for proof of time evaluation\nProof of time parameters\nChange of parameters to apply to PoT chain\nSigned farmer vote.\nSubspace solution ranges used for challenges.\nAPI necessary for block authorship with Subspace.\nSubspace justification\nV0 of the farmer vote.\nV0 of the chain constants.\nInitial version of the parameters\nFarmer vote.\nWrapped proof of time output for the purposes of runtime …\nWrapped solution for the purposes of runtime interface.\nWrapped solution verification parameters for the purposes …\nNumber of slots between slot arrival and when …\nReturns the consumed weight of the block. Available from …\nGet Subspace blockchain constants\nDepth <code>K</code> after which a block enters the recorded history.\nConsensus-related runtime interface\nSolution range in current block/era.\nDerive next slot input while taking parameters change into …\nPrivate implementation details of Subspace consensus …\nEntropy that should be injected at this time\nEra duration in blocks.\nReturns <code>Vec&lt;SegmentHeader&gt;</code> if a given extrinsic has them.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nHash of the vote, used for signing and verifying signature.\nSize of the blockchain history\nInherents for Subspace consensus\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the extrinsic is an inherent.\nHow many pieces one sector is supposed to contain (max)\nMinimum lifetime of a plotted sector, measured in archived …\nReturns <code>true</code> if justification must be archived, implies …\nCreate new instance.\nCreate new instance.\nCreate new instance.\nSolution range that will be used in the next block/era.\nGet next proof of time parameters change if any\nProof of time parameters\nFraction of pieces from the “recent history” (…\nNumber of latest archived segments that are considered “…\nReturns root plot public key in case block authoring is …\nSeed for this slot\nGet the segment commitment of records for specified …\nWhether solution range adjustment is enabled.\nSignature.\nSlot at which vote was created.\nSlot\nAt which slot change of parameters takes effect\nThe slot duration in milliseconds.\nNumber of iterations for proof of time per slot, …\nSlot iterations for this slot\nNew number of slot iterations\nSlot probability.\nSolution contained within.\nSolution ranges.\nSubmit farmer vote that is essentially a header with …\nTry to decode Subspace justification from generic …\nFarmer vote.\nVoting solution range in current block/era.\nVoting solution range that will be used in the next …\nNumber of slots between slot arrival and when …\nDepth <code>K</code> after which a block enters the recorded history.\nEra duration in blocks.\nMinimum lifetime of a plotted sector, measured in archived …\nFraction of pieces from the “recent history” (…\nNumber of latest archived segments that are considered “…\nThe slot duration in milliseconds.\nSlot probability.\nOptional next scheduled change of parameters\nNumber of iterations for proof of time per slot, …\nProof of time checkpoints from after future proof of …\nProof of time seed, the input for computing checkpoints\nFuture proof of time\nHeight at which vote was created.\nHash of the block on top of which vote was created.\nProof of time for this slot\nSlot at which vote was created.\nSolution (includes PoR).\nProvides implementations for the extern host functions.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nVerify whether <code>proof_of_time</code> is valid at specified <code>slot</code> if …\nVerify whether solution is valid, returns solution …\nA digest item which is usable with Subspace consensus.\nGeneric consensus\nDuplicate Subspace digests\nEnable solution range adjustment and override solution …\nDigest error\nVarious kinds of digest types used in errors\nFailed to decode Subspace digest\nSubspace digest missing\nError when deriving next digests\nError when verifying next digests\nNext solution range\nChange of parameters to apply to PoT chain\nNumber of iterations for proof of time per slot\nA Subspace pre-runtime digest. This contains all data …\nPre-digest\nProof of time information in pre-digest\nRoot plot public key was updated\nSeal (signature)\nSegment commitment\nSolution range\nDigest items extracted from a header into convenient form\nInitial version of the pre-digest\nInitial version of proof of time information\nIf this item is a Subspace Enable solution range …\nIf this item is a Subspace next solution range, return it.\nIf this item is a Subspace proof of time change of …\nIf this item is a Subspace proof of time slot iterations, …\nIf this item is a Subspace update of root plot public key, …\nIf this item is a Subspace segment commitment, return it.\nIf this item is a Subspace solution range, return it.\nIf this item is an Subspace pre-digest, return it.\nIf this item is a Subspace signature, return the signature.\nConstruct digest item than indicates enabling of solution …\nEnable solution range adjustment and Override solution …\nExtract the Subspace pre digest from the given header. …\nExtract the Subspace global randomness from the given …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nFuture proof of time\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstruct a digest item which contains next solution range.\nNext solution range\nProof of time information\nChange of parameters to apply to PoT chain\nChange of parameters to apply to PoT chain\nNumber of iterations for proof of time per slot, …\nNumber of iterations for proof of time per slot, …\nPre-runtime digest\nProof of time for this slot\nConstruct digest item that indicates update of root plot …\nRoot plot public key was updated\nConstruct a digest item which contains segment commitment.\nSegment commitments\nSignature (seal) if present\nSlot\nSolution (includes PoR)\nConstruct a digest item which contains a solution range.\nSolution range\nConstruct a digest item which contains a Subspace …\nConstruct a digest item which contains a Subspace seal.\nProof of time information\nSlot\nSolution (includes PoR)\nFuture proof of time\nProof of time for this slot\nThe Subspace inherent identifier.\nList of segment headers is not correct.\nProvides the segment headers inherent data for Subspace.\nErrors that can occur while checking segment headers.\nThe type of the Subspace inherent data.\nList of segment headers is not present.\nAuxiliary trait to extract Subspace inherent data.\nReturns the <code>data</code> of this inherent data provider.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate new inherent data provider from the given …\nReplace Subspace inherent data.\nSegment headers expected to be included in the block.\nGet Subspace inherent data.\nList of segment headers contained within proposed block.\nExpected list of segment headers according to node’s …")