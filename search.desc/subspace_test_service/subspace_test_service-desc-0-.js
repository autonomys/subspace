searchState.loadedDescShard("subspace_test_service", 0, "Subspace test service only.\nHelper type alias\nA mock Subspace consensus node instance used for testing.\nGet the nonce of the node account\nGet the nonce of the given account\nBackend.\nHash of the bad receipt this fraud proof targeted\nGive the peer at <code>addr</code> the minimum reputation, which will …\nSubscribe the block importing notification\nRemove all tx from the tx pool\nClient’s instance.\nWait for all the acknowledgements before return\nWait for the operator finish processing the consensus …\nConstruct and send extrinsic through rpc\nConstruct an extrinsic.\nConstruct an extrinsic that can be applied to the test …\nConstruct an unsigned general extrinsic.\nReturn if the given ER exist in the consensus state\nCode executor.\nGet the free balance of the given account\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet the bundle that created at <code>slot</code> from the transaction …\nReturns the domain block pruning depth.\nReturns the stake summary of the Domain.\nCalls <code>U::from(self)</code>.\nFerdie key\nThe domain runtime code storage proof\nThe MMR proof for the consensus state root that is used to …\nNetwork service.\nNetwork starter\nSubscribe the acknowledgement sender stream\nSubscribe the new slot notification\nReturn the next slot number\nCreate a Subspace <code>Configuration</code>.\nNotify the executor about the new slot and wait for the …\nProducing one block for both the primary node and the …\nProduce a new block on top of the current best block, with …\nProduce a new block on top of the current best block, with …\nProduce a new block with the slot on top of <code>parent_hash</code>, …\nProduce <code>n</code> number of blocks.\nProduce the given number of blocks for both the primary …\nKeep producing block with a fixed interval until the given …\nProduce <code>n</code> number of blocks and wait for bundle submitted …\nProduce a slot only, without waiting for the potential …\nProduce a new slot and wait for a bundle produced at this …\nProduce a slot and wait for bundle submission from …\nThe specific fraud proof variant\nRemove a ready transaction from transaction pool.\nRPC handlers.\nRun a mock consensus node\nRun a mock consensus node with finalization depth\nRun a mock consensus node with a private EVM domain\nThe SelectChain Strategy\nGet the nonce of the given account\nSet the next slot number\nStart the cross domain gossip message worker.\nStart the mock consensus node network\nTake and stop the <code>MockConsensusNode</code> and delete its …\nSubmit a tx to the tx pool\nSync service.\n<code>TaskManager</code>’s instance.\nTransaction pool.\nGive the peer at <code>addr</code> a high reputation, which guarantees …\nReturn a future that only resolve if a fraud proof that …\nCross-domain gossip notification service.\nGet the cross domain gossip message worker builder")