searchState.loadedDescShard("sp_messenger", 0, "Primitives for Messenger.\nTrait to check if the domain is registered.\nMessenger inherent identifier.\nProvides the set code inherent data.\nInherent specific errors\nThe type of the messenger inherent data.\nMaximum number of XDMs per domain/channel with future …\nApi to provide XDM extraction from Runtime Calls.\nTrait to note cross chain transfer\nTrait to handle XDM rewards.\nApi useful for relayers to fetch messages and submit …\nTrait that return various storage keys for storages on …\nRepresent a union of XDM types with their message ID\nReturns outbox and inbox responses from given nonce to …\nGet Channel nonce for given chain and channel id.\nReturns storage key for channels for given chain and …\nReturns all the channels to other chains and their local …\nReturns the storage key for confirmed domain block on …\nReturns the confirmed domain block storage for given …\nReturns the <code>data</code> of this inherent data provider.\nReturns any domain’s chains allowlist updates on …\nReturns the first inbox response message nonce that should …\nReturns the first outbox message nonce that should be …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nConstructs an inbox response message to the dst_chain as …\nReturns storage key for inbox response for a given …\nReturns the inbox responses storage key for given chain.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>Some(true)</code> if valid XDM or <code>Some(false)</code> if not …\nCreate new inherent data provider from the given <code>data</code>.\nReturns all the open channels to other chains.\nConstructs an outbox message to the dst_chain as an …\nReturns the outbox storage key for given chain.\nReturns storage key for outbox for a given message_id.\nLast processed relay message nonce. Could be None if there …\nLast processed relay response message nonce. Could be None …\nReturns the list of channels updated in the given block.\nReturns XDM message ID\nFee collected on src_chain for execution of XDM on both …\nEndpoint as defined in the formal spec. Endpoint is an …\nHandler to\nRepresents a particular endpoint in a given Execution …\nEndpoint request or response payload.\nRequest sent by src_endpoint to dst_endpoint.\nRequest sent by src_endpoint to dst_endpoint with …\nResponse for the message request.\nContains the error value\nId of the endpoint on a specific chain.\nUnique Id of the message between dst_chain and src_chain.\nContains the success value\nSender provides abstraction on sending messages to other …\nCollected execution fee for dst_chain.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTriggered by pallet-messenger when a new inbox message is …\nTriggered by pallet-messenger when a response for a …\nReturn the maximal possible consume weight of …\nReturn the maximal possible consume weight of <code>message</code>\nSends a message to dst_chain_id.\nCollected execution fee for src_chain.\nA query to fetch block messages for Outbox and Inbox …\nIdentifier of a chain.\nChannel describes a bridge to exchange messages between …\nRequest to close an open channel with foreign chain.\nChannel identity.\nRequest to open a channel with foreign chain.\nChannel V1 open parameters\nState of a channel.\nState of channel and nonces when channel is closed.\nChannel is closed and do not send or receive messages.\nChannel is closed along with nonces at current point.\nCross Domain message contains Message and its proof on …\nEndpoint message.\nContains the error value\nChannel between chains is initiated but do not yet send or …\nChannel between chains is initiated but do not yet send or …\nMessage contains information to be sent to or received …\nUnique Id of a message between two chains.\nUnique message key for Outbox and Inbox responses\nMessage with storage key to generate storage proof using …\nMessage weight tag used to indicate the consumed weight …\nSet of messages with storage keys to be relayed in a given …\nNonce used as an identifier and ordering of messages …\nContains the success value\nChannel is open and can send and receive messages.\nChannel is open and can send and receive messages.\nPayload v1 of the message\nProtocol message.\nDefines protocol requests performed on chains.\nDefines protocol requests performed on chains.\nProtocol message that encompasses  request or its response.\nVersioned message payload\nChannel identifier.\nChannelId the message was sent through.\nChannelId the message was sent through.\nThe amount of funds put on hold by the owner account for …\nChain this message is intended for.\nChain this message is intended for.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLast delivered message response nonce on src_chain.\nLatest outbox message nonce for which response was …\nMaximum outgoing non-delivered messages.\nOwner of the channel Owner maybe None if the channel was …\nNext inbox nonce.\nNext outbox nonce.\nMessage nonce within the channel.\nMessage nonce within the channel.\nMessage nonce within the channel.\nPayload of the message\nProof of message processed on src_chain.\nChain which initiated this message.\nChain which initiated this message.\nState of the channel.\nStorage key to generate proof for using proof backend.\nThe message weight tag\nThe message weight tag\nConsensus chain MMR leaf proof.\nConsensus chain MMR leaf proof.\nStorage proof that src domain chain’s block is out of …\nStorage proof that message is processed on src_chain.\nStorage proof that message is processed on src_chain.")