searchState.loadedDescShard("pallet_rewards", 0, "Pallet for issuing rewards to block producers.\nNumber of blocks over which to compute average blockspace …\nIssued reward for the block author\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\n<code>pallet-rewards</code> events\nReward address of block producer\nReward addresses of all receivers of voting rewards\nCan be used to configure the genesis state of this pallet.\nMax number of reward points\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nHooks to notify when there are any rewards for specific …\nPallet rewards for issuing rewards to block producers.\nBlock proposer subsidy parameters\nTax of the proposer on vote rewards\nTokens left to issue to farmers at any given time\nWhether rewards are enabled\nDetermine whether rewards are enabled or not\n<code>pallet-rewards</code> events\nCost of one byte of blockspace\nIssued reward for the voter\nVoter subsidy parameters\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>update_issuance_params</code>.\nBlock proposer subsidy parameters\nTokens left to issue to farmers at any given time\nAuto-generated docs-only module listing all (public and …\nUpdate dynamic issuance parameters\nUpdate dynamic issuance parameters\nVoter subsidy parameters\nAutogenerated weights for pallet_rewards\nUpdate dynamic issuance parameters\nUtilization of blockspace (in bytes) by the normal …\nBlock proposer subsidy parameters\nTokens left to issue to farmers at any given time\nWhether rewards are enabled\nVoter subsidy parameters\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWeights for pallet_rewards using the Substrate node and …\nWeight functions needed for pallet_rewards.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: <code>Rewards::ProposerSubsidyPoints</code> (r:0 w:1) Proof: …")