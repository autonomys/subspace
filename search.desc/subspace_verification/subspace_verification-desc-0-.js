searchState.loadedDescShard("subspace_verification", 0, "Verification primitives for Subspace.\nErrors encountered by the Subspace consensus primitives.\nHistory size is in the future\nInvalid audit chunk offset\nInvalid chunk\nInvalid chunk witness\nInvalid history size\nPiece verification failed\nInvalid piece offset\nInvalid proof of space\nSolution is outside of challenge range\nParameters for checking piece validity\nSector expired\nParameters for solution verification\nCalculate the block’s contribution to the fork weight, …\nCheck the reward signature validity.\nCurrent size of the history\nDerives next solution range based on the total era slots …\nDerive proof of time entropy from chunk and proof of time …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nValidate witness embedded within a piece produced by …\nValidate witness for record commitment hash produced by …\nReturns <code>Some(solution_distance)</code> if solution distance is …\nHow many pieces one sector is supposed to contain (max)\nMinimum lifetime of a plotted sector, measured in archived …\nParameters for checking piece validity.\nProof of time for which solution is built\nFraction of pieces from the “recent history” (…\nNumber of latest archived segments that are considered “…\nSegment commitment at <code>min_sector_lifetime</code> from sector …\nSegment commitment of segment to which piece belongs\nSolution range\nVerify whether solution is valid, returns solution …\nCurrent history size\nCurrent history size\nExpiration history size\nHalf of solution range\nHow many pieces one sector is supposed to contain (max)\nIndex of the piece that failed verification\nHistory size solution was created for\nSolution distance")