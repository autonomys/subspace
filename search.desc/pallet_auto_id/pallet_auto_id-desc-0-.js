searchState.loadedDescShard("pallet_auto_id", 0, "Pallet AutoID\nA representation of AutoId\nEmits when an AutoId is deactivated.\nIdentifier already exists.\nIdentifier mismatch.\nEmits when an AutoId is renewed.\nContains a variant per dispatchable extrinsic that this …\nCertificate associated with AutoId.\nSigning data used to verify the certificate action.\nSpecific action type taken by the subject of the …\nCertificate already revoked.\nCertificate revoked.\nEmits when a Certificate associated with AutoId is revoked.\nCertificate serial already issued.\nConfiguration trait of this pallet.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nCertificate expired.\nUnique AutoId identifier.\nCertificate is invalid,\nInvalid signature.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nEmits when a new AutoId is registered.\nNonce overflow.\nThe <code>Pallet</code> struct, the main type that implements traits …\nPublic key mismatch.\nRequest to register a new AutoId.\nType holds X509 certificate details used to register an …\nRequest to renew AutoId.\nType holds X509 certificate details used to renew.\nSerial issued by the subject.\nSignature holds algorithm used and the signature value.\nUnknown AutoId identifier.\nIssuer auto id does not exist.\nX509 certificate.\nType of action taken.\nCertificate associated with this AutoId.\nDeactivates a given AutoId.\nDeactivates a given AutoId.\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nOn which AutoId the action is taken.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA list of all certificate serials issues by the subject. …\nIssuer identifier of this certificate.\nCreate a call with the variant <code>deactivate_auto_id</code>.\nCreate a call with the variant <code>register_auto_id</code>.\nCreate a call with the variant <code>renew_auto_id</code>.\nCreate a call with the variant <code>revoke_certificate</code>.\nCertificate action nonce.\nCurrent nonce of the certificate.\nDer encoded full X509 certificate.\nRegisters a new AutoId after validating the provided …\nRegisters a new AutoId after validating the provided …\nRenews a given AutoId.\nRenews a given AutoId.\nRevokes a certificate associated with given AutoId.\nRevokes a certificate associated with given AutoId.\nSerial number for this certificate\nAuto-generated docs-only module listing all (public and …\nSubject common name of the certificate.\nDer encoded certificate’s subject’s public key info.\nValidity of the certificate\nAutogenerated weights for pallet_auto_id\nDeactivates a given AutoId.\nRegisters a new AutoId after validating the provided …\nRenews a given AutoId.\nRevokes a certificate associated with given AutoId.\nStores the auto id identifier against an AutoId.\nStores list of revoked certificates.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWeights for pallet_auto_id using the Substrate node and …\nWeight functions needed for pallet_auto_id.\nStorage: <code>AutoId::AutoIds</code> (r:1 w:1) Proof: <code>AutoId::AutoIds</code> (…\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: <code>Timestamp::Now</code> (r:1 w:0) Proof: <code>Timestamp::Now</code> (…\nStorage: <code>Timestamp::Now</code> (r:1 w:0) Proof: <code>Timestamp::Now</code> (…\nStorage: <code>Timestamp::Now</code> (r:1 w:0) Proof: <code>Timestamp::Now</code> (…\nStorage: <code>Timestamp::Now</code> (r:1 w:0) Proof: <code>Timestamp::Now</code> (…\nStorage: <code>AutoId::AutoIds</code> (r:1 w:1) Proof: <code>AutoId::AutoIds</code> (…\nStorage: <code>AutoId::AutoIds</code> (r:2 w:1) Proof: <code>AutoId::AutoIds</code> (…")