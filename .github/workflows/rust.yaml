name: Rust

on: [push, pull_request]

env:
  # Not needed in CI, should make things a bit faster
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always

jobs:
  cargo-fmt:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        rust:
          - nightly-2021-09-15

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          target: wasm32-unknown-unknown
          override: true
          components: rustfmt, clippy

      - name: Configure cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ matrix.rust }}-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  cargo-clippy:
    strategy:
      matrix:
        os:
          - ubuntu-20.04
          - macos-11
          - windows-2019
        rust:
          - nightly-2021-09-15

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          target: wasm32-unknown-unknown
          override: true
          components: rustfmt, clippy

      # Workaround to resolve link error with C:\msys64\mingw64\bin\libclang.dll
      - name: Remove msys64
        run: Remove-Item -LiteralPath "C:\msys64\" -Force -Recurse
        if: runner.os == 'Windows'

      - name: CUDA toolchain
        uses: Jimver/cuda-toolkit@v0.2.4
        id: cuda-toolkit
        with:
          cuda: '11.2.2'
        if: runner.os != 'macOS'

      - name: Configure cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ matrix.os }}-cargo-${{ matrix.rust }}-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ matrix.os }}-cargo-

      - name: cargo clippy (Linux or Windows with CUDA)
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --features=spartan-farmer/cuda -- -D warnings
        if: runner.os != 'macOS'

      - name: cargo clippy (macOS)
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
        if: runner.os == 'macOS'

  cargo-test:
    strategy:
      matrix:
        os:
          - ubuntu-20.04
          - macos-11
          - windows-2019
        rust:
          - nightly-2021-09-15

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          target: wasm32-unknown-unknown
          override: true
          components: rustfmt, clippy

      # Workaround to resolve link error with C:\msys64\mingw64\bin\libclang.dll
      - name: Remove msys64
        run: Remove-Item -LiteralPath "C:\msys64\" -Force -Recurse
        if: runner.os == 'Windows'

      - name: CUDA toolchain
        uses: Jimver/cuda-toolkit@v0.2.4
        id: cuda-toolkit
        with:
          cuda: '11.2.2'
        if: runner.os != 'macOS'

      - name: Configure cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ matrix.os }}-cargo-${{ matrix.rust }}-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ matrix.os }}-cargo-

      - name: cargo test (Linux or Windows with CUDA)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --features=spartan-farmer/cuda
        if: runner.os != 'macOS'

      - name: cargo test (macOS)
        uses: actions-rs/cargo@v1
        with:
          command: test
        if: runner.os == 'macOS'
